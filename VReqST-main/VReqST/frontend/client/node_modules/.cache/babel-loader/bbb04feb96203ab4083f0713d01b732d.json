{"ast":null,"code":"var _jsxFileName = \"/home/shambhavi/Documents/SERC/VReqST-v3/VReqST/VReqST-main/VReqST/frontend/client/src/Components/Project/ProjectPageContent.jsx\";\nimport { Box, Button, Flex, Grid, GridItem, Heading, List, ListIcon, ListItem, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalOverlay, Select, Spinner, Stack, Tag, Text, Tooltip, useDisclosure, useToast, Tabs, TabList, TabPanels, Tab, TabPanel, FormControl, Textarea } from \"@chakra-ui/react\";\nimport Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport AceEditor from \"react-ace\";\nimport { FaExclamationCircle } from \"react-icons/fa\";\nimport { BiDownload } from \"react-icons/bi\";\nimport { CheckCircleIcon } from \"@chakra-ui/icons\";\nimport { useParams } from \"react-router-dom\";\nimport { validation_server, backend } from \"../../server_urls\";\nimport isJson from \"../../utils/checkjson\";\nimport e from \"cors\";\nimport semantics from \"../../utils/syntax.json\";\nlet errors = [];\nlet rules = [];\nlet valid_rule = [];\nlet grammarDataArray = [];\nlet flag = false;\nlet fl = false; // const reactAceComponent = this.refs.reactAceComponent;\n\nconst tipcolors = {\n  number: \"orange\",\n  object: \"green\",\n  boolean: \"red\",\n  string: \"yellow\",\n  array: \"blue\"\n};\n\nconst jsonValidator = (grammar, validating) => {\n  console.log(grammar);\n  const keys = Object.keys(grammar);\n  const keys22 = Object.keys(validating);\n  const grammarArray = Object.keys(grammar).filter(value => !Object.keys(validating).includes(value));\n  const extraEntries = Object.keys(validating).filter(value => !Object.keys(grammar).includes(value));\n  extraEntries.map(en => {\n    let app = 1;\n\n    for (let i = 0; i < keys.length; i++) {\n      if (keys[i] === en || grammar[keys[i]].root === en || grammar[keys[i]].proot === en) app = 0;\n    }\n\n    if (app) {\n      errors.push(`\"${en}\" is invalid key in the JSON`);\n    }\n  });\n  grammarArray.map(en => {\n    let app = 1;\n\n    for (let i = 0; i < keys22.length; i++) {\n      if (en === keys22[i] || grammar[en].root === keys22[i] || grammar[en].proot === keys22[i]) {\n        app = 0;\n      }\n    }\n\n    if (app === 1) {\n      errors.push(`\"${en}\" is a mandatory field! Please add the field with ${grammar[en].typeof} type`);\n    }\n  });\n\n  for (let i = 0; i < keys.length; i++) {\n    var key = keys[i];\n\n    if (grammar[key].hasOwnProperty('proot')) {\n      let a = validating[grammar[key].proot];\n\n      for (let i = 0; i < a.length; i++) {\n        let c = a[i];\n\n        if (c.hasOwnProperty(grammar[key].root)) {\n          if (typeof c[grammar[key].root][key] === grammar[key].typeof) {} else {\n            if (typeof c[grammar[key].root][key] === \"undefined\") {\n              errors.push(`\"${key}\" is a mandatory field! Please add the field with ${grammar[key].typeof} type`);\n            } else {\n              errors.push(` \"${key}\" has an invalid type of '${typeof c[grammar[key].root][key]}'. Expected type of ${grammar[key].typeof}`);\n            }\n          }\n        }\n      }\n    } else if (grammar[key].hasOwnProperty('repeat') && grammar[key].repeat === \"allow\") {\n      let a = grammar[key].root;\n      var obje = Object.keys(validating);\n      let found = obje.indexOf(a);\n\n      if (typeof validating[a] === \"object\") {\n        for (let i = 0; i < validating[a].length; i++) {\n          if (typeof validating[a][i][key] === grammar[key].typeof || typeof validating[a][i][key] === \"object\" && grammar[key].typeof === \"array\") {} else {\n            if (typeof validating[a][i][key] === \"undefined\") {\n              errors.push(`\"${key}\" is a mandatory field! Please add the field with ${grammar[key].typeof} type`);\n            } else {\n              errors.push(` \"${key}\" has an invalid type of '${typeof validating[a][i][key]}'. Expected type of ${grammar[key].typeof}`);\n            }\n          }\n        }\n      }\n    } else {\n      if (grammar[key].root === 'null' || grammar[key].root === 'undefined' || !grammar[key].hasOwnProperty('root')) {\n        if (typeof validating[key] === \"undefined\") {\n          continue;\n        } // Handling nested objects recursively\n\n\n        if (typeof validating[key] === \"object\" && grammar[key].typeof === \"object\") {\n          continue;\n        }\n\n        if (typeof validating[key] !== grammar[key].typeof) {\n          errors.push(` \"${key}\" has an invalid type of '${typeof validating[key]}'. Expected type of ${grammar[key].typeof}`);\n        } else {//alert(\"sucess\");\n        }\n\n        if (typeof validating[key] === \"string\" && typeof validating[key] === grammar[key].typeof && grammar[key].req === \"mandatory\" && validating[key].length === 0) {\n          errors.push(`\"${key}\" is mandatory, empty string is not allowed`);\n        }\n      } else {\n        let a = grammar[key].root;\n\n        if (false) {\n          for (let i = 0; i < validating[a].length; i++) {\n            if (typeof validating[a][i].key === grammar[key].typeof) {\n              alert(\"Sucess\");\n            } else {\n              //alert(\"Failure\");\n              //errors.push(\"kindly see the json syntax\");\n              errors.push(`\"${key}\" has invalid type, expected \"${grammar[key].typeof}\"`);\n            }\n          }\n        } else {\n          var b = validating[a]; //alert(a);\n\n          let c = Object.keys(b);\n          let found = c.indexOf(key);\n\n          if (typeof validating[a][c[found]] === grammar[key].typeof || typeof validating[a][c[found]] === \"object\" && grammar[key].typeof === \"array\") {//alert(\"Sucess!!!!!!\");\n          } else {\n            if (typeof validating[a][c[found]] === \"undefined\") {\n              errors.push(`\"${key}\" is a mandatory field! Please add the field with ${grammar[key].typeof} type`);\n            } else {\n              errors.push(` \"${key}\" has an invalid type of '${typeof validating[a][c[found]]}'. Expected type of ${grammar[key].typeof}`);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  if (errors.length > 0) {\n    console.log(errors);\n    return true;\n  }\n\n  return false;\n};\n\nconst ProjectPageContent = ({\n  stepslen,\n  nextStep,\n  prevStep,\n  reset,\n  activeStep,\n  scene,\n  action,\n  asset,\n  projectname,\n  timeline,\n  custom\n}) => {\n  const toast = useToast();\n  const [files, setfiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [data, setdata] = useState(\"\");\n  const [grammarid, setGrammarid] = useState(\"\");\n  const [validated, setValidated] = useState(false); // const [grammarData, setGrammarData] = useState({});\n\n  const [grammarbundle, setGrammarbundle] = useState({});\n  const [displayErrors, setDisplayErrors] = useState([]);\n  const [valid_rule_list, setvalid_rule_list] = useState([]);\n  const [downloadable, setDownloadable] = useState(false);\n  let [val, setValue] = React.useState(\"\");\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [description, set_description] = useState(\"\");\n  const [perdata, set_perdata] = useState(\"\");\n  const [seed, setSeed] = useState(0);\n  const {\n    projectid\n  } = useParams();\n  const [rulename, setRulename] = useState(\"\");\n  const jwttoken = localStorage.getItem(\"jwtToken\");\n  const [textPointer, setTextPointer] = useState({\n    \"row\": 0,\n    \"column\": 0\n  });\n  const [position, setPosition] = useState(0);\n  const [savebutton, setSavebutton] = useState(false);\n\n  const convertPointer = (pointer, lines) => {\n    let pos = 0;\n    console.log(lines);\n\n    for (let i = 0; i <= pointer.row - 1; i++) {\n      pos += lines[i].length;\n      if (lines[i].length === 0) pos += 1;\n      console.log(\"+\", lines[i].length);\n    }\n\n    pos += pointer.column;\n    if (pointer.column === 0) pos += 1;\n    console.log(\"+\", pointer.column);\n    console.log(pos);\n    console.log(data);\n    console.log(data.length);\n    setPosition(pos);\n    console.log(position);\n  };\n\n  const getfiles = async () => {\n    let url = backend; // console.log(\"hey\");\n\n    url = url + `/api/json/timeline`; // if (activeStep === 0) url = `http://localhost:5002/api/json/scene`;\n    // else if (activeStep === 1) url = `http://localhost:5002/api/json/scene`;\n    // else if (activeStep === 2) url = `http://localhost:5002/api/json/scene`;\n    // else if (activeStep === 3) url = `http://localhost:5002/api/json/scene`;\n    // else if (activeStep === 4) url = `http://localhost:5002/api/json/scene`;\n\n    try {\n      const requestOptions = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: jwttoken\n        }\n      };\n      const res = await Axios.get(url, requestOptions); // console.log(res);\n      ////////////////////////\n\n      const requestOption = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: jwttoken\n        }\n      };\n      const res2 = await Axios.get(backend + `/api/project/${projectid}/grammarName`, requestOption);\n      console.log(res2.data.grammarName);\n      setfiles(res.data); // console.log(res.data);\n      // console.log(files);\n\n      res.data.map(p => {\n        // console.log(p.name);\n        if (p.name == res2.data.grammarName) {\n          if (grammarDataArray.length != 5) {\n            grammarDataArray.push(p.scene);\n            grammarDataArray.push(p.asset);\n            grammarDataArray.push(p.action);\n            grammarDataArray.push(p.custom);\n            grammarDataArray.push(p.timeline);\n          } // console.log(grammarDataArray);\n\n        }\n      }); // setfiles(res.data);\n    } catch (error) {\n      toast({\n        title: \"Something went wrong 1\",\n        //Goes wrong\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\"\n      });\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    const f = async () => {\n      setLoading(true);\n      await getfiles();\n      setLoading(false);\n    };\n\n    f();\n  }, []);\n  useEffect(() => {\n    getfiles();\n\n    if (activeStep == 0) {\n      setdata(scene);\n      getfiles();\n      fl = false;\n\n      if (isJson(scene)) {\n        setDownloadable(true);\n      }\n    }\n\n    if (activeStep == 1) {\n      setdata(asset);\n      fl = false;\n\n      if (isJson(asset)) {\n        setDownloadable(true);\n      }\n    }\n\n    if (activeStep == 2) {\n      setdata(action);\n      fl = false;\n\n      if (isJson(action)) {\n        setDownloadable(true);\n      }\n    }\n\n    if (activeStep == 3) {\n      setdata(custom);\n      fl = false;\n\n      if (isJson(custom)) {\n        setDownloadable(true);\n      }\n    }\n\n    if (activeStep == 4) {\n      setdata(timeline);\n      fl = false;\n\n      if (isJson(timeline)) {\n        setDownloadable(true);\n      }\n    }\n  }, []);\n\n  const downloadTxtFile = () => {\n    if (data === \"\" || !isJson(data)) {\n      toast({\n        title: \"JSON Syntax is not correct\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\"\n      });\n      setDownloadable(false);\n      return;\n    }\n\n    let fileName = \"\";\n    if (activeStep === 0) fileName = \"scene\";\n    if (activeStep === 1) fileName = \"asset\";\n    if (activeStep === 2) fileName = \"action\";\n    if (activeStep === 3) fileName = \"custom\";\n    if (activeStep === 4) fileName = \"timeline\";\n    const json = data;\n    const blob = new Blob([json], {\n      type: \"application/json\"\n    });\n    const href = URL.createObjectURL(blob);\n    const downlink = document.createElement(\"a\");\n    downlink.href = href;\n    downlink.download = projectname + \"-\" + fileName + \".json\";\n    document.body.appendChild(downlink);\n    downlink.click(); // clean up \"a\" element & remove ObjectURL\n\n    document.body.removeChild(downlink);\n    URL.revokeObjectURL(href);\n  };\n\n  let handleInputChange = e => {\n    let inputValue = e.target.value;\n    setValue(inputValue);\n  };\n\n  let asset_valid = (asset, asset_list, flag) => {\n    // if flag is zero, dont print any errors\n    let valid_obj = false;\n    asset_list.map((d, j) => {\n      // console.log(asset, d);\n      if (asset === d) valid_obj = true; // if(c.targetObj == d)\n      //   valid_target = true;\n    });\n\n    if (valid_obj === false) {\n      setValidated(false);\n      setDownloadable(false);\n\n      if (flag) {\n        toast({\n          title: \"Object \" + asset + \" is not listed in Asset JSON. Only assets present in Asset JSON are valid.\" + asset + \"  \" + asset_list,\n          status: \"warning\",\n          duration: 5000,\n          isClosable: true,\n          position: \"top-right\"\n        });\n      }\n\n      return -1;\n    }\n\n    return 1;\n  };\n\n  let assetValidator = (a, all_object_ids) => {\n    a.map((c, i) => {\n      // console.log(c);\n      let ret1 = asset_valid(c.sourceObj, all_object_ids, 1);\n      let ret2;\n\n      if (c.targetObj[c.targetObj.length - 1] === '*') {\n        // console.log(\"yes\");\n        ret2 = 1;\n      } else ret2 = asset_valid(c.targetObj, all_object_ids, 1); // console.log(\"rets:\", ret1, ret2);\n\n\n      if (ret1 === -1) {\n        // toast({\n        //   title:\n        //     \"Source object should be a part of Asset JSON.\",\n        //   status: \"warning\",\n        //   duration: 5000,\n        //   isClosable: true,\n        //   position: \"top-right\",\n        // });\n        return false;\n      } // console.log(c.repeatactionfor.length);\n\n\n      if (c.repeatactionfor !== null && c.repeatactionfor.length !== 0 && c.repeatactionfor[0] !== \" \") {\n        let repeat_assets = [];\n        let curr_word = \"\";\n        Array.from(c.repeatactionfor).map((char, key) => {\n          if (char === ',' || char === ' ') {\n            if (curr_word !== \"\" && curr_word !== \" \" && curr_word.length !== 0) {\n              repeat_assets.push(curr_word);\n              curr_word = \"\";\n            }\n          } else {\n            curr_word = curr_word + char;\n          }\n        });\n        if (curr_word != \"\" || curr_word != \" \" || curr_word.length != 0) repeat_assets.push(curr_word); // console.log(repeat_assets);\n\n        repeat_assets.map((word, key) => {\n          let ret = asset_valid(word, all_object_ids, 1); // console.log(\"ret\", ret);\n\n          if (ret === -1) {\n            // toast({\n            //   title:\n            //     \"Objects in repeatactionfor must be a part of Asset JSON.\",\n            //   status: \"warning\",\n            //   duration: 5000,\n            //   isClosable: true,\n            //   position: \"top-right\",\n            // });\n            return false;\n          }\n        });\n\n        if (ret2 === -1 && c.targetObj[c.targetObj.length - 1] !== \"*\") {\n          toast({\n            title: \"Please update the Target Object according to the reccomendations in the document.\",\n            status: \"warning\",\n            duration: 5000,\n            isClosable: true,\n            position: \"top-right\"\n          });\n          return false;\n        } else {\n          if (asset_valid(c.targetObj, repeat_assets, 0) === 1) {\n            toast({\n              title: \"Target object should not be a part of repeatactionfor.\",\n              status: \"warning\",\n              duration: 5000,\n              isClosable: true,\n              position: \"top-right\"\n            });\n            return false;\n          }\n        }\n      }\n    });\n    return true;\n  };\n\n  let onValidate2 = async () => {\n    toast({\n      title: \"Validation successfull\",\n      status: \"success\",\n      duration: 5000,\n      isClosable: true,\n      position: \"top-right\"\n    });\n    console.log(\"output\");\n    setDownloadable(true);\n    valid_rule.push({\n      rulename: rulename,\n      data_name: data,\n      description: description\n    });\n    setSavebutton(true); // fetch('http://localhost:5002/api/upload-custom-rule', {\n    //   headers: {\n    //     'Accept': 'application/json, text/plain, */*',\n    //     'Content-Type': 'application/json'\n    //   },\n    //   method: \"POST\",\n    //   body: JSON.stringify({\n    //     rulename: rulename,\n    //     data_name: data,\n    //     description: description\n    //   })      \n    // }).then((response)=>{\n    //   console.log(response);\n    // })\n\n    console.log(valid_rule);\n  };\n\n  const onValidate = async () => {\n    // console.log(\"onValidate Entered\");\n    if (!isJson(data)) {\n      setValidated(false);\n      setDownloadable(false);\n      toast({\n        title: \"JSON Syntax is not correct\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\"\n      });\n      return;\n    }\n\n    setDisplayErrors([]);\n    errors = [];\n    var myjson = JSON.parse(data); // console.log(myjson);\n    // try {\n    //   if (activeStep == 2) {\n    //     try {\n    //       {\n    //         rules = myjson.objlist;\n    //         var a = myjson.ObjAction;\n    //         //console.log(a[0]);\n    //         //alert(a[0]);\n    //         for (let i = 0; i < a.length; i++) {\n    //           var c = a[i].actresid;\n    //           //  console.log(c);\n    //           flag = true;\n    //           rules.push(c);\n    //         }\n    //       }\n    //     }\n    //     catch (e) {\n    //       console.log(e);\n    //       setValidated(false);\n    //       setDownloadable(false);\n    //     }\n    //   }\n    // }\n    // catch {\n    //   console.log(e);\n    // }\n    // if (grammarDataArray.length === 0) {\n    //   await getfiles();\n    //   //var temp=Object.keys(grammarDataArray);\n    //   // console.log(grammarDataArray);\n    // }\n    // console.log(grammarDataArray[0]);\n\n    try {\n      var mygrm = \"\";\n      if (activeStep == 0) mygrm = JSON.parse(grammarDataArray[0]);else if (activeStep == 1) mygrm = JSON.parse(grammarDataArray[1]);else if (activeStep == 2) mygrm = JSON.parse(grammarDataArray[2]);else if (activeStep == 3) mygrm = JSON.parse(grammarDataArray[3]);else if (activeStep == 4) mygrm = JSON.parse(grammarDataArray[4]);\n    } catch (e) {\n      console.log(e);\n    }\n\n    try {\n      // console.log(\"I am trying:\", activeStep);\n      if (activeStep == 2) {\n        try {\n          {\n            // console.log(\"Shambhaviiiiiiiiiiii\");\n            let all_object_ids = [];\n            const myobjs = JSON.parse(asset);\n            myobjs.articles.map((c, i) => {\n              all_object_ids.push(c._sid);\n            }); // console.log(all_object_ids);\n\n            var a = myjson.ObjAction;\n\n            for (let i = 0; i < a.length; i++) {\n              var c = a[i].actresid;\n              flag = true;\n\n              if (c) {\n                rules.push(c);\n              }\n            }\n          }\n        } catch (e) {\n          console.log(e);\n          setValidated(false);\n          setDownloadable(false);\n          toast({\n            title: \"There are errors in the entered JSON, please check them out! Caught error\",\n            status: \"warning\",\n            duration: 5000,\n            isClosable: true,\n            position: \"top-right\"\n          });\n          return;\n        }\n      } else if (activeStep == 1) {\n        try {\n          {\n            var a = myjson.articles; //console.log(a[0]);\n            //alert(a[0]);\n\n            for (let i = 0; i < a.length; i++) {\n              var c = a[i]._objectname; //  console.log(c);\n\n              flag = true;\n\n              if (c) {\n                rules.push(c);\n              }\n            }\n          }\n        } catch (e) {\n          console.log(e);\n          setValidated(false);\n          setDownloadable(false);\n          toast({\n            title: \"There are errors in the entered JSON, please check them out!\",\n            status: \"warning\",\n            duration: 5000,\n            isClosable: true,\n            position: \"top-right\"\n          });\n          return;\n        }\n      }\n    } catch {\n      console.log(e);\n    }\n\n    if (grammarDataArray.length === 0) {\n      await getfiles();\n    }\n\n    try {\n      let mygrm = \"\";\n      if (activeStep == 0) mygrm = JSON.parse(grammarDataArray[0]);else if (activeStep == 1) mygrm = JSON.parse(grammarDataArray[1]);else if (activeStep == 2) mygrm = JSON.parse(grammarDataArray[2]);else if (activeStep == 3) mygrm = JSON.parse(grammarDataArray[3]);else if (activeStep == 4) mygrm = JSON.parse(grammarDataArray[4]);\n\n      if (!jsonValidator(mygrm, myjson)) {\n        if (activeStep === 2) {\n          let all_object_ids = [];\n          const myobjs = JSON.parse(asset);\n          myobjs.articles.map((c, i) => {\n            all_object_ids.push(c._sid);\n          }); // console.log(all_object_ids);\n\n          const ret_asset = assetValidator(myjson.ObjAction, all_object_ids); // console.log(ret_asset);\n\n          if (!ret_asset) {\n            console.log(errors);\n            toast({\n              title: \"There are errors in the entered JSON, please check them out!\",\n              status: \"warning\",\n              duration: 5000,\n              isClosable: true,\n              position: \"top-right\"\n            });\n            return;\n          } else {\n            setValidated(true);\n            setDownloadable(true);\n            toast({\n              title: \"JSON Validated Successfully\",\n              status: \"success\",\n              duration: 5000,\n              isClosable: true,\n              position: \"top-right\"\n            });\n          }\n        } else {\n          setValidated(true);\n          setDownloadable(true);\n          toast({\n            title: \"JSON Validated Successfully\",\n            status: \"success\",\n            duration: 5000,\n            isClosable: true,\n            position: \"top-right\"\n          });\n        }\n      } else {\n        console.log(errors);\n        toast({\n          title: \"There are errors in the entered JSON, please check them out!\",\n          status: \"warning\",\n          duration: 5000,\n          isClosable: true,\n          position: \"top-right\"\n        });\n      } // console.log(typeof errors);\n\n\n      setDisplayErrors(errors);\n    } catch (e) {\n      console.log(e);\n      toast({\n        title: \"There are errors in the entered JSON, please check them outkljljulij!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\"\n      });\n    }\n  }; // const onChangeFile = async (e) => {\n  //   setGrammarid(e.target.value);\n  //   if (!e.target.value) {\n  //     setGrammarData({});\n  //     return;\n  //   }\n  //   try {\n  //     const requestOptions = {\n  //       headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n  //     };\n  //     const res = await Axios.get(\n  //       `http://localhost:5002/api/json/${e.target.value}`,\n  //       requestOptions\n  //     );\n  //     const grammarjson = JSON.parse(res.data.data);\n  //     setGrammarData(grammarjson);\n  //   } catch (error) {\n  //     toast({\n  //       title: \"Something went wrong 4\",\n  //       status: \"error\",\n  //       duration: 10000,\n  //       isClosable: true,\n  //       position: \"top\",\n  //     });\n  //     console.log(error);\n  //   }\n  // };\n  // const onChangeFile = async (e) => {\n  //   setGrammarid(e.target.value);\n  //   if (!e.target.value) {\n  //     // setGrammarData({});\n  //     return;\n  //   }\n  //   try {\n  //     //   if(activeStep==0) setGrammarData\n  //     //   if(activeStep==0) setGrammarData(grammarbundle.scene)\n  //     //  else if(activeStep==1) setGrammarData(grammarbundle.asset)\n  //     //  else if(activeStep==2) setGrammarData(grammarbundle.action)\n  //     //  else if(activeStep==3) setGrammarData(grammarbundle.custom)\n  //     //  else if(activeStep==4) setGrammarData(grammarbundle.timeline)\n  //   } catch (error) {\n  //     toast({\n  //       title: \"Something went wrong 4\",\n  //       status: \"error\",\n  //       duration: 10000,\n  //       isClosable: true,\n  //       position: \"top\",\n  //     });\n  //     console.log(error);\n  //   }\n  // };\n\n\n  const showValidateHandler = async () => {\n    console.log(data);\n    let code = data;\n    let jsonData = JSON.stringify({\n      types: [{\n        type: \"if\",\n        order: [[\"condition\"], [\"scope\"]]\n      }, {\n        type: \"else\",\n        prev: [\"if\", \"else-if\"],\n        order: [[\"scope\"]]\n      }, {\n        type: \"else-if\",\n        prev: [\"if\", \"else-if\"],\n        order: [[\"condition\"], [\"scope\"]]\n      }, {\n        type: \"switch\",\n        order: [[\"condition\"], [\"scope\", [\"Case\"], [\"Default\"]]]\n      }, {\n        type: \"switch-case\",\n        order: [[\"condition\"], [\"scope\"]]\n      }, {\n        type: \"switch-case-default\",\n        order: [[\"scope\"]]\n      }, {\n        type: \"for\",\n        order: [[\"condition\", [\"conditionSeparator\", \"conditionSeparator\"]], [\"scope\"]]\n      }, {\n        type: \"while\",\n        order: [[\"condition\"], [\"scope\"]]\n      }, {\n        type: \"do\",\n        order: [[\"scope\"]],\n        next: [\"do-while\"]\n      }, {\n        type: \"do-while\",\n        order: [[\"condition\"]],\n        prev: [\"do\"]\n      }],\n      constructs: [{\n        name: \"if\",\n        type: \"if\",\n        conditionStart: \"(\",\n        conditionEnd: \")\",\n        scopeStart: \"(\",\n        scopeEnd: \")\"\n      }, {\n        name: \"else-if\",\n        type: \"else-if\",\n        conditionStart: \"(\",\n        conditionEnd: \")\",\n        scopeStart: \"(\",\n        scopeEnd: \")\",\n        pre: [\"if\", \"else-if\"]\n      }, {\n        name: \"else\",\n        type: \"else\",\n        scopeStart: \"(\",\n        scopeEnd: \")\",\n        pre: [\"if\", \"else-if\"]\n      }, {\n        name: \"switch\",\n        type: \"switch\",\n        conditionStart: \"(\",\n        conditionEnd: \")\",\n        body: \"Case\",\n        scopeStart: \"(\",\n        scopeEnd: \")\",\n        \"end-body\": \"default\"\n      }, {\n        name: \"Case\",\n        type: \"switch-case\",\n        conditionStart: \"(\",\n        conditionEnd: \")\",\n        scopeStart: \"(\",\n        scopeEnd: \")\",\n        parent: \"switch\"\n      }, {\n        name: \"Default\",\n        type: \"switch-case-default\",\n        scopeStart: \"(\",\n        scopeEnd: \")\",\n        parent: \"switch\"\n      }, {\n        name: \"for\",\n        type: \"for\",\n        conditionStart: \"(\",\n        conditionEnd: \")\",\n        conditionSeparator: \"/\",\n        scopeStart: \"(\",\n        scopeEnd: \")\"\n      }, {\n        name: \"while\",\n        type: \"while\",\n        conditionStart: \"(\",\n        conditionEnd: \")\",\n        scopeStart: \"(\",\n        scopeEnd: \")\"\n      }, {\n        name: \"do\",\n        type: \"do\",\n        scopeStart: \"(\",\n        scopeEnd: \")\",\n        next: \"do-while\"\n      }, {\n        name: \"do-while\",\n        type: \"do-while\",\n        conditionStart: \"(\",\n        conditionEnd: \")\"\n      }],\n      specialSymbols: [\"#\", \":\", \"!\", \"/\", \"(\", \")\"]\n    }); // console.log(jsonData);\n    // fetch(`http://localhost:5001/api/upload`, {\n\n    fetch(validation_server + '/api/upload', {\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      method: \"POST\",\n      body: JSON.stringify({\n        jsonData\n      })\n    }).then(response => {\n      console.log(response);\n      response.json().then(val => {\n        console.log(\"Uploaded\");\n        console.log(val);\n      }).catch(err => {\n        console.log(err);\n      }); // console.log(`Response: ${response.json()}`)\n    }).catch(err => {\n      console.log(err);\n    });\n    console.log(code);\n    fetch(validation_server + '/api/process', {\n      // fetch(`http://localhost:5001/api/process`, {\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      method: \"POST\",\n      body: JSON.stringify({\n        code\n      })\n    }).then(response => {\n      console.log(response);\n      response.json().then(val => {\n        console.log(\"Validation response from server\");\n        console.log(val.valid);\n\n        if (val.valid) {\n          onValidate2();\n        } else {\n          setValidated(false);\n          setDownloadable(false);\n          toast({\n            title: \"Error! Please follow conditional syntax.\",\n            status: \"error\",\n            duration: 5000,\n            isClosable: true,\n            position: \"top-right\"\n          });\n          return;\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleValidateButton = () => {\n    console.log(\"Showing\");\n    showValidateHandler(true);\n  };\n\n  const saveButton = async () => {\n    console.log(\"saving\");\n\n    try {\n      const res = await Axios.post(backend + \"/api/custom/upload-custom-rule\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: jwttoken\n        },\n        data: {\n          project_id: projectid,\n          rulename: rulename,\n          data_name: data,\n          description: description\n        }\n      });\n      toast({\n        title: \"Behaviour Added\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\"\n      });\n      console.log(\"fetching behaviours\");\n      const res_rules = await Axios.post(backend + \"/api/custom/get-custom-rules\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: jwttoken\n        },\n        data: {\n          project_id: projectid\n        }\n      });\n      console.log(res_rules.data);\n      setvalid_rule_list(res_rules.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onNextStep = async () => {\n    if (!isJson(data) && activeStep !== 3) {\n      setValidated(false);\n      toast({\n        title: \"JSON Syntax is not correct\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\"\n      });\n      return;\n    }\n\n    setSubmitting(true);\n    let url = backend;\n    if (activeStep === 0) url = url + `/api/project/${projectid}/scene`;else if (activeStep === 1) url = url + `/api/project/${projectid}/asset`;else if (activeStep === 2) url = url + `/api/project/${projectid}/action`;else if (activeStep === 3) {\n      url = url + `/api/project/${projectid}/custom`;\n    } else if (activeStep === 4) url = url + `/api/project/${projectid}/timeline`;\n\n    try {\n      const requestOptions = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: jwttoken\n        }\n      };\n      const res = await Axios.patch(url, {\n        data\n      }, requestOptions);\n      toast({\n        title: res.data.message,\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\"\n      });\n    } catch (error) {\n      toast({\n        title: \"Something went wrong 3\",\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\"\n      });\n      console.log(error);\n    }\n\n    setSubmitting(false); // if (activeStep == 2) {\n    //   activeStep = 3;\n    //   return;\n    // }\n\n    nextStep();\n  };\n\n  const handel_name = e => {\n    setRulename(e.target.value);\n  };\n\n  const handel_description = e => {\n    set_description(e.target.value);\n  };\n\n  const onFinish = async () => {\n    if (!isJson(data)) {\n      setValidated(false);\n      toast({\n        title: \"JSON Syntax is not correct\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\"\n      });\n      return;\n    }\n\n    setSubmitting(true);\n    let url = backend;\n    if (activeStep === 0) url = url + `/api/project/${projectid}/scene`;else if (activeStep === 1) url = url + `/api/project/${projectid}/asset`;else if (activeStep === 2) url = url + `/api/project/${projectid}/action`;else if (activeStep === 3) {\n      url = url + `/api/project/${projectid}/custom`;\n    } else if (activeStep === 4) url = url + `/api/project/${projectid}/timeline`;\n\n    try {\n      const requestOptions = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: jwttoken\n        }\n      };\n      const res = await Axios.patch(url, {\n        data\n      }, requestOptions);\n      toast({\n        title: res.data.message,\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\"\n      });\n    } catch (error) {\n      toast({\n        title: \"Something went wrong 2\",\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\"\n      });\n      console.log(error);\n    }\n\n    setSubmitting(false);\n    onOpen();\n  };\n\n  return loading ? React.createElement(React.Fragment, null, React.createElement(Flex, {\n    width: \"80vw\",\n    height: \"90vh\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1288\n    },\n    __self: this\n  }, React.createElement(Spinner, {\n    thickness: \"4px\",\n    speed: \"0.65s\",\n    emptyColor: \"gray.200\",\n    color: \"blue.500\",\n    size: \"xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1294\n    },\n    __self: this\n  }))) : React.createElement(React.Fragment, null, activeStep !== 3 ? React.createElement(Grid, {\n    templateColumns: \"repeat(6, 1fr)\",\n    gap: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1306\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    rowSpan: 3,\n    colSpan: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1307\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    flexDir: \"column\",\n    pr: 20,\n    pt: 120,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1308\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    rowSpan: 3,\n    colSpan: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1338\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    py: 4,\n    alignItems: \"center\",\n    flexDir: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1339\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    marginTop: 20,\n    marginBottom: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1353\n    },\n    __self: this\n  }, React.createElement(AceEditor, {\n    fontSize: 16,\n    showPrintMargin: true,\n    showGutter: true,\n    highlightActiveLine: true,\n    setOptions: {\n      enableBasicAutocompletion: true,\n      enableLiveAutocompletion: true,\n      enableSnippets: false,\n      showLineNumbers: true,\n      tabSize: 2\n    },\n    mode: \"json\",\n    theme: \"terminal\",\n    onChange: (newvalue, event) => {\n      console.log(event);\n      setdata(newvalue);\n      console.log(data);\n      setDownloadable(false);\n    },\n    value: data,\n    name: \"grammar-editor\",\n    wrapEnabled: true,\n    height: \"40em\",\n    width: \"40em\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1354\n    },\n    __self: this\n  })), React.createElement(Stack, {\n    py: 4,\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1381\n    },\n    __self: this\n  }, React.createElement(Button, {\n    colorScheme: \"yellow\",\n    disabled: !data,\n    onClick: onValidate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1382\n    },\n    __self: this\n  }, \"Validate_\"), React.createElement(Button, {\n    colorScheme: \"green\",\n    disabled: !downloadable,\n    onClick: downloadTxtFile,\n    leftIcon: React.createElement(BiDownload, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1393\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1389\n    },\n    __self: this\n  }, \"Download File\")), activeStep === stepslen ? React.createElement(Flex, {\n    px: 4,\n    py: 4,\n    width: \"100%\",\n    flexDirection: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1400\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    fontSize: \"xl\",\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1401\n    },\n    __self: this\n  }, \"Woohoo! All steps completed!\"), React.createElement(Button, {\n    mx: \"auto\",\n    mt: 6,\n    size: \"sm\",\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1404\n    },\n    __self: this\n  }, \"Reset\")) : React.createElement(Flex, {\n    width: \"100%\",\n    justify: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1409\n    },\n    __self: this\n  }, React.createElement(Button, {\n    isDisabled: activeStep === 0,\n    mr: 4,\n    onClick: prevStep,\n    size: \"sm\",\n    variant: \"outline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1410\n    },\n    __self: this\n  }, \"Prev\"), activeStep === stepslen - 1 ? React.createElement(Button, {\n    size: \"sm\",\n    onClick: onFinish,\n    disabled: !validated,\n    isLoading: submitting,\n    colorScheme: \"green\",\n    variant: \"outline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1421\n    },\n    __self: this\n  }, \"Finish\") : React.createElement(Button, {\n    size: \"sm\",\n    onClick: onNextStep,\n    disabled: !validated,\n    isLoading: submitting,\n    colorScheme: \"yellow\",\n    variant: \"outline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1432\n    },\n    __self: this\n  }, \"Next\")))), React.createElement(GridItem, {\n    rowSpan: 3,\n    colSpan: 2,\n    pt: 120,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1447\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    flexDir: \"column\",\n    pl: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1448\n    },\n    __self: this\n  }, displayErrors.length > 0 ? React.createElement(List, {\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1450\n    },\n    __self: this\n  }, displayErrors.map((e, i) => {\n    let str = \"\";\n    const splitarr = e.match(/(?:[^\\s\"]+|\"[^\"]*\")+/g);\n    let Val;\n\n    if (splitarr.length === 12) {\n      splitarr.map((m, i) => i !== 0 && i !== 10 && (str = str + \" \" + m));\n\n      Val = () => React.createElement(React.Fragment, null, React.createElement(Text, {\n        as: \"span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1461\n        },\n        __self: this\n      }, React.createElement(Text, {\n        as: \"span\",\n        fontWeight: \"bold\",\n        color: tipcolors[splitarr[10]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1462\n        },\n        __self: this\n      }, splitarr[0]), React.createElement(Text, {\n        as: \"span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1469\n        },\n        __self: this\n      }, str), React.createElement(Text, {\n        as: \"span\",\n        fontWeight: \"bold\",\n        color: tipcolors[splitarr[10]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1470\n        },\n        __self: this\n      }, \" \" + splitarr[10])));\n    }\n\n    if (splitarr.length === 7 || splitarr.length === 8) {\n      splitarr.map((m, i) => i !== 0 && (str = str + \" \" + m));\n\n      Val = () => React.createElement(React.Fragment, null, React.createElement(Text, {\n        as: \"span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1486\n        },\n        __self: this\n      }, React.createElement(Text, {\n        as: \"span\",\n        fontWeight: \"bold\",\n        color: \"teal.400\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1487\n        },\n        __self: this\n      }, splitarr[0]), React.createElement(Text, {\n        as: \"span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1494\n        },\n        __self: this\n      }, str)));\n    }\n\n    if (splitarr.length === 11) {\n      splitarr.map((m, i) => i !== 0 && i !== 10 && (str = str + \" \" + m));\n\n      Val = () => React.createElement(React.Fragment, null, React.createElement(Text, {\n        as: \"span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1506\n        },\n        __self: this\n      }, React.createElement(Text, {\n        as: \"span\",\n        fontWeight: \"bold\",\n        color: tipcolors[splitarr[10]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1507\n        },\n        __self: this\n      }, splitarr[0]), React.createElement(Text, {\n        as: \"span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1514\n        },\n        __self: this\n      }, str), React.createElement(Text, {\n        as: \"span\",\n        fontWeight: \"bold\",\n        color: tipcolors[splitarr[10]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1515\n        },\n        __self: this\n      }, \" \" + splitarr[10])));\n    }\n\n    return React.createElement(ListItem, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1528\n      },\n      __self: this\n    }, React.createElement(ListIcon, {\n      as: FaExclamationCircle,\n      color: \"red.500\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1529\n      },\n      __self: this\n    }), React.createElement(Val, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1530\n      },\n      __self: this\n    }));\n  })) : React.createElement(React.Fragment, null))), React.createElement(Modal, {\n    onClose: onClose,\n    isOpen: isOpen,\n    isCentered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1540\n    },\n    __self: this\n  }, React.createElement(ModalOverlay, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1541\n    },\n    __self: this\n  }), React.createElement(ModalContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1542\n    },\n    __self: this\n  }, React.createElement(ModalCloseButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1543\n    },\n    __self: this\n  }), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1544\n    },\n    __self: this\n  }, React.createElement(Box, {\n    textAlign: \"center\",\n    py: 10,\n    px: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1545\n    },\n    __self: this\n  }, React.createElement(CheckCircleIcon, {\n    boxSize: \"50px\",\n    color: \"green.500\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1546\n    },\n    __self: this\n  }), React.createElement(Heading, {\n    as: \"h2\",\n    size: \"xl\",\n    mt: 6,\n    mb: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1547\n    },\n    __self: this\n  }, \"JSON Validation Successful!\"), React.createElement(Text, {\n    color: \"gray.500\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1550\n    },\n    __self: this\n  }, \"We have made sure that your data is free from any data-types or syntax errors. Happy Development!\"))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1556\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => {\n      onClose(); // history.push(\"/projects\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1557\n    },\n    __self: this\n  }, \"Close\"))))) : React.createElement(React.Fragment, null, React.createElement(Tabs, {\n    isFitted: true,\n    variant: \"enclosed\",\n    marginTop: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1567\n    },\n    __self: this\n  }, React.createElement(TabList, {\n    mb: \"1em\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1568\n    },\n    __self: this\n  }, React.createElement(Tab, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1569\n    },\n    __self: this\n  }, \"Write\"), React.createElement(Tab, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1570\n    },\n    __self: this\n  }, \"Read\")), React.createElement(TabPanels, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1572\n    },\n    __self: this\n  }, React.createElement(TabPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1573\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1574\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    templateColumns: \"repeat(8, 1fr)\",\n    gap: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1575\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    rowSpan: 8,\n    colStart: 1,\n    colEnd: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1576\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    py: 4,\n    alignItems: \"center\",\n    flexDir: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1577\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1579\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1580\n    },\n    __self: this\n  }, \"Name:\", React.createElement(FormControl, {\n    paddingRight: 10,\n    paddingLeft: 2 // value={rulename} onChange={(e) => { setRulename(e) }} placeholder=\"name\"\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1582\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: rulename,\n    onChange: handel_name,\n    placeholder: \"  Name\",\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1587\n    },\n    __self: this\n  })), \"Description:\", React.createElement(FormControl, {\n    paddingLeft: 2 // value={description} onChange={(e) => { set_description(e) }} placeholder=\"description\"\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1595\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: description,\n    onChange: handel_description,\n    placeholder: \"  Description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1600\n    },\n    __self: this\n  })))), React.createElement(Flex, {\n    flexDir: \"row\",\n    paddingTop: 10,\n    paddingLeft: 20,\n    marginLeft: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1609\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    marginLeft: 10,\n    marginRight: 10,\n    marginBottom: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1612\n    },\n    __self: this\n  }, React.createElement(AceEditor, {\n    fontSize: 16,\n    showPrintMargin: true,\n    showGutter: true,\n    highlightActiveLine: true,\n    setOptions: {\n      enableBasicAutocompletion: true,\n      enableLiveAutocompletion: true,\n      enableSnippets: false,\n      showLineNumbers: true,\n      tabSize: 2\n    },\n    mode: \"json\",\n    theme: \"terminal\",\n    onChange: (newvalue, event) => {\n      // console.log(newvalue);\n      fl = false; // setTextPointer({\"row\": event.end.row, \"column\": event.end.column});\n      // console.log(event);\n\n      setdata(newvalue); // console.log(data);\n      // console.log(data.length);\n\n      setDownloadable(false);\n    } // onClick={(event) => {   \n    //   console.log(\"clicked here\");     \n    //   console.log(event);            \n    //   // setTextPointer(event.target.selectionStart);\n    //   setTextPointer({\"row\": event.end.row, \"column\": event.end.column});\n    //   console.log(textPointer);\n    //   // convertPointer(textPointer, )\n    // }}\n    ,\n    onCursorChange: newplace => {\n      // console.log(\"changed text pointer\");\n      // console.log(newplace);\n      // setTextPointer({\"row\": newplace.cursor.row, \"column\": newplace.cursor.column});\n      convertPointer({\n        \"row\": newplace.cursor.row,\n        \"column\": newplace.cursor.column\n      }, newplace.cursor.document.$lines); // console.log(textPointer);\n      // console.log(position);\n    },\n    onSelectionChange: e => {\n      // console.log(e);\n      // setTextPointer({\"row\": e.cursor.row, \"column\": e.cursor.column});\n      convertPointer({\n        \"row\": e.cursor.row,\n        \"column\": e.cursor.column\n      }, e.doc.$lines);\n    },\n    value: data,\n    name: \"grammar-editor\",\n    wrapEnabled: true,\n    height: \"40em\",\n    width: \"40em\",\n    id: \"editor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1613\n    },\n    __self: this\n  })), React.createElement(Box, {\n    as: \"pane\",\n    bg: \"grey\",\n    _dark: {\n      bg: \"gray.800\"\n    },\n    h: \"40em\",\n    w: \"24em\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1666\n    },\n    __self: this\n  }, React.createElement(Box // navbar\n  , {\n    as: \"pane\",\n    zIndex: \"fixed\",\n    h: \"300px\",\n    pb: \"10\",\n    overflowX: \"hidden\",\n    overflowY: \"auto\",\n    bg: \"grey\",\n    w: \"400px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1675\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    px: \"4\",\n    pb: \"3\",\n    pt: \"5\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1685\n    },\n    __self: this\n  }, React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1686\n    },\n    __self: this\n  }, React.createElement(Text, {\n    fontSize: \"2xl\",\n    ml: \"2\",\n    color: \"white\",\n    fontWeight: \"semibold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1687\n    },\n    __self: this\n  }, \"Actions\"))), React.createElement(Flex, {\n    direction: \"column\",\n    as: \"nav\",\n    fontSize: \"lg\",\n    color: \"white\",\n    \"aria-label\": \"Main Navigation\",\n    margin: 5,\n    marginTop: 2,\n    marginLeft: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1698\n    },\n    __self: this\n  }, flag ? rules.map(p => React.createElement(\"a\", {\n    onClick: () => {\n      var newdata_part1 = data.slice(0, position);\n      var newdata_part2 = data.slice(position);\n      setdata(newdata_part1 + p + newdata_part2); // setdata(data + p);\n    },\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1710\n    },\n    __self: this\n  }, p)) : React.createElement(React.Fragment, null, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1724\n    },\n    __self: this\n  }, \"No recent files...\")))), React.createElement(Box, {\n    as: \"pane\" // bg=\"#D69E2E\"\n    ,\n    bg: \"black\" // colorScheme=\"#D69E2E\"\n    ,\n    _dark: {\n      bg: \"gray.800\"\n    },\n    h: \"40em\",\n    w: \"13em\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1729\n    },\n    __self: this\n  }, React.createElement(Box, {\n    as: \"pane\",\n    zIndex: \"fixed\",\n    h: \"300px\",\n    overflowX: \"hidden\",\n    overflowY: \"auto\",\n    w: \"400px\",\n    colorScheme: \"yellow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1740\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    px: \"4\",\n    pb: \"3\",\n    pt: \"5\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1749\n    },\n    __self: this\n  }, React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1750\n    },\n    __self: this\n  }, React.createElement(Text, {\n    fontSize: \"2xl\",\n    ml: \"2\",\n    color: \"white\",\n    fontWeight: \"semibold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1751\n    },\n    __self: this\n  }, \"Semantics\"))), React.createElement(Flex, {\n    direction: \"column\",\n    as: \"nav\",\n    fontSize: \"lg\",\n    color: \"white\",\n    \"aria-label\": \"Main Navigation\",\n    margin: 5,\n    marginTop: 2,\n    marginLeft: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1761\n    },\n    __self: this\n  }, semantics.elements.map(p => React.createElement(\"a\", {\n    onClick: () => {\n      console.log(position);\n      var newdata_part1 = data.slice(0, position);\n      var newdata_part2 = data.slice(position);\n      console.log(newdata_part1);\n      console.log(newdata_part2);\n      setdata(newdata_part1 + p.editorDisplay + newdata_part2); // if(textPointer.column)\n      // const reactAceComponent = this.refs.reactAceComponent;\n      // const editor = reactAceComponent.editor;\n      // editor.session.insert(textPointer, p.editorDisplay);\n      // var newdata_part2 = data.slice(textPointer);\n      // var x = newdata_part1 + 'x';\n      // console.log(x);\n      // console.log(newdata_part1 + p.editorDisplay);\n      // setdata(newdata_part1 + p.editorDisplay + newdata_part2);\n      // setdata(data + p.editorDisplay);\n    },\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1773\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1796\n    },\n    __self: this\n  }, p.displayName)))))))), React.createElement(Stack, {\n    py: 4,\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1806\n    },\n    __self: this\n  }, React.createElement(Button, {\n    colorScheme: \"yellow\",\n    disabled: !data || !rulename,\n    onClick: () => {\n      handleValidateButton();\n      setSeed(Math.random());\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1807\n    },\n    __self: this\n  }, \"Validate\"), React.createElement(Button, {\n    colorScheme: \"green\",\n    disabled: !data || !rulename || !savebutton,\n    onClick: () => {\n      saveButton();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1817\n    },\n    __self: this\n  }, \"Save\")), activeStep === stepslen ? React.createElement(Flex, {\n    px: 4,\n    py: 4,\n    width: \"100%\",\n    flexDirection: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1829\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    fontSize: \"xl\",\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1835\n    },\n    __self: this\n  }, \"Woohoo! All steps completed!\"), React.createElement(Button, {\n    mx: \"auto\",\n    mt: 6,\n    size: \"sm\",\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1838\n    },\n    __self: this\n  }, \"Reset\")) : React.createElement(Flex, {\n    width: \"100%\",\n    justify: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1843\n    },\n    __self: this\n  }, React.createElement(Button, {\n    isDisabled: activeStep === 0,\n    mr: 4,\n    onClick: prevStep,\n    size: \"sm\",\n    variant: \"outline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1844\n    },\n    __self: this\n  }, \"Prev\")))), React.createElement(GridItem, {\n    rowSpan: 3,\n    colSpan: 2,\n    pt: 120,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1863\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    flexDir: \"column\",\n    pl: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1864\n    },\n    __self: this\n  }, displayErrors.length > 0 ? React.createElement(List, {\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1866\n    },\n    __self: this\n  }, displayErrors.map((e, i) => {\n    let str = \"\";\n    const splitarr = e.match(/(?:[^\\s\"]+|\"[^\"]*\")+/g);\n    let Val;\n\n    if (splitarr.length === 12) {\n      splitarr.map((m, i) => i !== 0 && i !== 10 && (str = str + \" \" + m));\n\n      Val = () => React.createElement(React.Fragment, null, React.createElement(Text, {\n        as: \"span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1878\n        },\n        __self: this\n      }, React.createElement(Text, {\n        as: \"span\",\n        fontWeight: \"bold\",\n        color: tipcolors[splitarr[10]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1879\n        },\n        __self: this\n      }, splitarr[0]), React.createElement(Text, {\n        as: \"span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1886\n        },\n        __self: this\n      }, str), React.createElement(Text, {\n        as: \"span\",\n        fontWeight: \"bold\",\n        color: tipcolors[splitarr[10]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1887\n        },\n        __self: this\n      }, \" \" + splitarr[10])));\n    }\n\n    if (splitarr.length === 7 || splitarr.length === 8) {\n      splitarr.map((m, i) => i !== 0 && (str = str + \" \" + m));\n\n      Val = () => React.createElement(React.Fragment, null, React.createElement(Text, {\n        as: \"span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1908\n        },\n        __self: this\n      }, React.createElement(Text, {\n        as: \"span\",\n        fontWeight: \"bold\",\n        color: \"teal.400\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1909\n        },\n        __self: this\n      }, splitarr[0]), React.createElement(Text, {\n        as: \"span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1916\n        },\n        __self: this\n      }, str)));\n    }\n\n    if (splitarr.length === 11) {\n      splitarr.map((m, i) => i !== 0 && i !== 10 && (str = str + \" \" + m));\n\n      Val = () => React.createElement(React.Fragment, null, React.createElement(Text, {\n        as: \"span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1929\n        },\n        __self: this\n      }, React.createElement(Text, {\n        as: \"span\",\n        fontWeight: \"bold\",\n        color: tipcolors[splitarr[10]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1930\n        },\n        __self: this\n      }, splitarr[0]), React.createElement(Text, {\n        as: \"span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1937\n        },\n        __self: this\n      }, str), React.createElement(Text, {\n        as: \"span\",\n        fontWeight: \"bold\",\n        color: tipcolors[splitarr[10]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1938\n        },\n        __self: this\n      }, \" \" + splitarr[10])));\n    }\n\n    return React.createElement(ListItem, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1951\n      },\n      __self: this\n    }, React.createElement(ListIcon, {\n      as: FaExclamationCircle,\n      color: \"red.500\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1952\n      },\n      __self: this\n    }), React.createElement(Val, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1956\n      },\n      __self: this\n    }));\n  })) : React.createElement(React.Fragment, null)))))), React.createElement(TabPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1969\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1970\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    templateColumns: \"repeat(6, 1fr)\",\n    gap: 4,\n    marginTop: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1971\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    rowSpan: 3,\n    colStart: 2,\n    colEnd: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1972\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    py: 4,\n    alignItems: \"center\",\n    flexDir: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1973\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1975\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    marginRight: 10,\n    marginBottom: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1976\n    },\n    __self: this\n  }, React.createElement(AceEditor, {\n    fontSize: 16,\n    showPrintMargin: true,\n    showGutter: true,\n    highlightActiveLine: true,\n    setOptions: {\n      enableBasicAutocompletion: true,\n      enableLiveAutocompletion: true,\n      enableSnippets: false,\n      showLineNumbers: true,\n      tabSize: 2\n    },\n    mode: \"json\",\n    theme: \"terminal\",\n    value: perdata,\n    name: \"grammar-editor\",\n    wrapEnabled: true,\n    height: \"40em\",\n    width: \"40em\",\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1977\n    },\n    __self: this\n  })), React.createElement(Box, {\n    as: \"pane\",\n    bg: \"whitesmoke\",\n    _dark: {\n      bg: \"gray.800\"\n    } // minH=\"10vh\"\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1999\n    },\n    __self: this\n  }, React.createElement(Box // navbar\n  , {\n    as: \"pane\",\n    pos: \"absolute\" // top=\"250\"\n    // right=\"20\"\n    ,\n    zIndex: \"fixed\",\n    h: \"300px\",\n    pb: \"10\",\n    overflowX: \"hidden\",\n    overflowY: \"auto\",\n    bg: \"grey\",\n    borderColor: \"black\",\n    borderRightWidth: \"1px\",\n    w: \"400px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2007\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    px: \"4\",\n    py: \"5\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2022\n    },\n    __self: this\n  }, React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2023\n    },\n    __self: this\n  }, React.createElement(Text, {\n    fontSize: \"2xl\",\n    ml: \"2\",\n    color: \"white\",\n    fontWeight: \"semibold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2024\n    },\n    __self: this\n  }, \"Behaviours\"))), React.createElement(Flex, {\n    direction: \"column\",\n    as: \"nav\",\n    fontSize: \"md\",\n    color: \"white\",\n    \"aria-label\": \"Main Navigation\",\n    margin: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2035\n    },\n    __self: this\n  }, React.createElement(React.Fragment, null, valid_rule_list.length > 0 ? valid_rule_list.map(p => React.createElement(\"a\", {\n    // key={p.rulename}\n    onClick: () => {\n      if (perdata.length > 0) {\n        set_perdata(perdata + `,{\"rulename\":\"${p.rulename}\", \"description\":\"${p.description}\",\"logic\": \"${btoa(p.data_name)}\"}\\n`);\n      } else {\n        set_perdata(perdata + `{\"rulename\":\"${p.rulename}\", \"description\":\"${p.description}\",\"logic\": \"${btoa(p.data_name)}\"}\\n`);\n      }\n    },\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2046\n    },\n    __self: this\n  }, p.rulename) // console.log(p.rulename)\n  ) : // console.log(\"jjhghguyg\")\n  React.createElement(React.Fragment, null, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2079\n    },\n    __self: this\n  }, \"No recent files...\"))))))), React.createElement(Stack, {\n    py: 4,\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2091\n    },\n    __self: this\n  }, React.createElement(Button // paddingLeft={-2}\n  , {\n    colorScheme: \"yellow\",\n    onClick: () => {\n      // perdata.slice(0,perdata.length -1)\n      if (!fl) {\n        console.log(typeof rules[0]);\n\n        for (let i = 0; i < rules.length; i++) {\n          rules[i] = `\"` + rules[i] + `\"`;\n        }\n\n        fl = true;\n      }\n\n      setdata(`{\"objects_used\":[${rules}],\"rules\":[${perdata}]}`);\n      toast({\n        title: \"JSON is validated, click next to continue\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\"\n      }); // console.log(data);\n    },\n    disabled: !perdata,\n    isLoading: submitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2092\n    },\n    __self: this\n  }, \"Validate\"), React.createElement(Button, {\n    onClick: () => {\n      set_perdata(\"\"); // fl = false;\n    } // disabled={!validated || !grammarid}\n    ,\n    isLoading: submitting,\n    colorScheme: \"red\" // variant={\"outline\"}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2124\n    },\n    __self: this\n  }, \"Flush\"), React.createElement(Button, {\n    onClick: () => setSeed(Math.random()) // disabled={!validated || !grammarid}\n    ,\n    isLoading: submitting,\n    colorScheme: \"green\" // variant={\"outline\"}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2136\n    },\n    __self: this\n  }, \"Update\"), React.createElement(Button, {\n    colorScheme: \"green\",\n    disabled: !downloadable,\n    onClick: downloadTxtFile,\n    leftIcon: React.createElement(BiDownload, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2149\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2145\n    },\n    __self: this\n  }, \"Download File\")), React.createElement(Flex, {\n    width: \"100%\",\n    justify: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2154\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"sm\",\n    onClick: onNextStep // disabled={!validated || !grammarid}\n    ,\n    isLoading: submitting,\n    colorScheme: \"yellow\",\n    variant: \"outline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2155\n    },\n    __self: this\n  }, \"Next\")))))))))));\n};\n\nconst CustomCard = React.forwardRef(({\n  children,\n  ...rest\n}, ref) => React.createElement(Box, {\n  p: \"1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 2180\n  },\n  __self: this\n}, React.createElement(Tag, Object.assign({\n  ref: ref\n}, rest, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 2181\n  },\n  __self: this\n}), children)));\nexport default ProjectPageContent;","map":{"version":3,"sources":["/home/shambhavi/Documents/SERC/VReqST-v3/VReqST/VReqST-main/VReqST/frontend/client/src/Components/Project/ProjectPageContent.jsx"],"names":["Box","Button","Flex","Grid","GridItem","Heading","List","ListIcon","ListItem","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalOverlay","Select","Spinner","Stack","Tag","Text","Tooltip","useDisclosure","useToast","Tabs","TabList","TabPanels","Tab","TabPanel","FormControl","Textarea","Axios","React","useEffect","useState","AceEditor","FaExclamationCircle","BiDownload","CheckCircleIcon","useParams","validation_server","backend","isJson","e","semantics","errors","rules","valid_rule","grammarDataArray","flag","fl","tipcolors","number","object","boolean","string","array","jsonValidator","grammar","validating","console","log","keys","Object","keys22","grammarArray","filter","value","includes","extraEntries","map","en","app","i","length","root","proot","push","typeof","key","hasOwnProperty","a","c","repeat","obje","found","indexOf","req","alert","b","ProjectPageContent","stepslen","nextStep","prevStep","reset","activeStep","scene","action","asset","projectname","timeline","custom","toast","files","setfiles","loading","setLoading","submitting","setSubmitting","data","setdata","grammarid","setGrammarid","validated","setValidated","grammarbundle","setGrammarbundle","displayErrors","setDisplayErrors","valid_rule_list","setvalid_rule_list","downloadable","setDownloadable","val","setValue","isOpen","onOpen","onClose","description","set_description","perdata","set_perdata","seed","setSeed","projectid","rulename","setRulename","jwttoken","localStorage","getItem","textPointer","setTextPointer","position","setPosition","savebutton","setSavebutton","convertPointer","pointer","lines","pos","row","column","getfiles","url","requestOptions","headers","token","res","get","requestOption","res2","grammarName","p","name","error","title","status","duration","isClosable","f","downloadTxtFile","fileName","json","blob","Blob","type","href","URL","createObjectURL","downlink","document","createElement","download","body","appendChild","click","removeChild","revokeObjectURL","handleInputChange","inputValue","target","asset_valid","asset_list","valid_obj","d","j","assetValidator","all_object_ids","ret1","sourceObj","ret2","targetObj","repeatactionfor","repeat_assets","curr_word","Array","from","char","word","ret","onValidate2","data_name","onValidate","myjson","JSON","parse","mygrm","myobjs","articles","_sid","ObjAction","actresid","_objectname","ret_asset","showValidateHandler","code","jsonData","stringify","types","order","prev","next","constructs","conditionStart","conditionEnd","scopeStart","scopeEnd","pre","parent","conditionSeparator","specialSymbols","fetch","method","then","response","catch","err","valid","handleValidateButton","saveButton","post","project_id","res_rules","onNextStep","patch","message","handel_name","handel_description","onFinish","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","newvalue","event","str","splitarr","match","Val","m","newplace","cursor","$lines","doc","bg","newdata_part1","slice","newdata_part2","elements","editorDisplay","displayName","Math","random","btoa","CustomCard","forwardRef","children","rest","ref"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Button,\n  Flex,\n  Grid,\n  GridItem,\n  Heading,\n  List,\n  ListIcon,\n  ListItem,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalOverlay,\n  Select,\n  Spinner,\n  Stack,\n  Tag,\n  Text,\n  Tooltip,\n  useDisclosure,\n  useToast,\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n  FormControl,\n  Textarea,\n} from \"@chakra-ui/react\";\nimport Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport AceEditor from \"react-ace\";\nimport { FaExclamationCircle } from \"react-icons/fa\";\nimport { BiDownload } from \"react-icons/bi\";\nimport { CheckCircleIcon } from \"@chakra-ui/icons\";\nimport { useParams } from \"react-router-dom\";\nimport {validation_server, backend} from \"../../server_urls\"\n\nimport isJson from \"../../utils/checkjson\";\nimport e from \"cors\";\nimport semantics from \"../../utils/syntax.json\";\n\nlet errors = [];\nlet rules = [];\nlet valid_rule = [];\nlet grammarDataArray = [];\nlet flag = false;\nlet fl = false;\n\n// const reactAceComponent = this.refs.reactAceComponent;\n\nconst tipcolors = {\n  number: \"orange\",\n  object: \"green\",\n  boolean: \"red\",\n  string: \"yellow\",\n  array: \"blue\",\n};\n\nconst jsonValidator = (grammar, validating) => {\n\n  console.log(grammar);\n  const keys = Object.keys(grammar);\n  const keys22 = Object.keys(validating);\n\n\n  const grammarArray = Object.keys(grammar).filter(\n    (value) => !Object.keys(validating).includes(value)\n  );\n\n  const extraEntries = Object.keys(validating).filter(\n    (value) => !Object.keys(grammar).includes(value)\n  );\n\n  extraEntries.map((en) => {\n    let app = 1;\n\n    for (let i = 0; i < keys.length; i++) \n    {\n      if (keys[i] === en || grammar[keys[i]].root === en || grammar[keys[i]].proot === en) \n        app = 0;\n    }\n    if (app) {\n      errors.push(`\"${en}\" is invalid key in the JSON`);\n    }\n  });\n\n  grammarArray.map((en) => {\n    let app = 1;\n    for (let i = 0; i < keys22.length; i++) {\n      if (en === keys22[i] || grammar[en].root === keys22[i] || grammar[en].proot === keys22[i]) {\n        app = 0;\n      }\n    }\n    if (app === 1) {\n      errors.push(\n        `\"${en}\" is a mandatory field! Please add the field with ${grammar[en].typeof} type`\n      );\n\n    }\n  })\n\n  for (let i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (grammar[key].hasOwnProperty('proot')) {\n      let a = validating[grammar[key].proot];\n      for (let i = 0; i < a.length; i++) {\n        let c = a[i];\n        if (c.hasOwnProperty(grammar[key].root)) {\n\n          if (typeof c[grammar[key].root][key] === grammar[key].typeof) {\n          }\n          else {\n            if (typeof c[grammar[key].root][key] === \"undefined\") {\n              errors.push(\n                `\"${key}\" is a mandatory field! Please add the field with ${grammar[key].typeof} type`\n              );\n            }\n            else {\n              errors.push(\n                ` \"${key}\" has an invalid type of '${typeof c[grammar[key].root][key]}'. Expected type of ${grammar[key].typeof}`\n              );\n            }\n          }\n        }\n      }\n    }\n    else if (grammar[key].hasOwnProperty('repeat') && grammar[key].repeat === \"allow\") {\n      let a = grammar[key].root;\n      var obje = Object.keys(validating);\n      let found = obje.indexOf(a);\n\n      if (typeof validating[a] === \"object\") {\n        for (let i = 0; i < validating[a].length; i++) {\n          if (typeof validating[a][i][key] === grammar[key].typeof || (typeof validating[a][i][key] === \"object\" && grammar[key].typeof === \"array\")) {\n          }\n          else {\n            if (typeof validating[a][i][key] === \"undefined\") {\n              errors.push(\n                `\"${key}\" is a mandatory field! Please add the field with ${grammar[key].typeof} type`\n              );\n            }\n            else {\n              errors.push(\n                ` \"${key}\" has an invalid type of '${typeof validating[a][i][\n                key\n                ]}'. Expected type of ${grammar[key].typeof}`\n              );\n            }\n          }\n        }\n\n      }\n\n    }\n    else {\n      if (grammar[key].root === 'null' || grammar[key].root === 'undefined' || (!grammar[key].hasOwnProperty('root'))) {\n\n        if (typeof validating[key] === \"undefined\") {\n          continue;\n        }\n\n        // Handling nested objects recursively\n        if (\n          typeof validating[key] === \"object\" &&\n          grammar[key].typeof === \"object\"\n        ) {\n          continue;\n        }\n\n        if (typeof validating[key] !== grammar[key].typeof) {\n          errors.push(\n            ` \"${key}\" has an invalid type of '${typeof validating[\n            key\n            ]}'. Expected type of ${grammar[key].typeof}`\n          );\n        }\n        else {\n          //alert(\"sucess\");\n        }\n\n        if (\n          typeof validating[key] === \"string\" &&\n          typeof validating[key] === grammar[key].typeof &&\n          grammar[key].req === \"mandatory\" &&\n          validating[key].length === 0\n        ) {\n          errors.push(`\"${key}\" is mandatory, empty string is not allowed`);\n        }\n      }\n      else {\n\n        let a = grammar[key].root;\n        if (false) {\n          for (let i = 0; i < validating[a].length; i++) {\n            if (typeof validating[a][i].key === grammar[key].typeof) {\n              alert(\"Sucess\");\n            }\n            else {\n              //alert(\"Failure\");\n              //errors.push(\"kindly see the json syntax\");\n              errors.push(`\"${key}\" has invalid type, expected \"${grammar[key].typeof}\"`);\n            }\n          }\n        }\n        else {\n          var b = validating[a];\n          //alert(a);\n          let c = Object.keys(b);\n          let found = c.indexOf(key)\n          if (typeof validating[a][c[found]] === grammar[key].typeof || (typeof validating[a][c[found]] === \"object\" && grammar[key].typeof === \"array\")) {\n            //alert(\"Sucess!!!!!!\");\n          }\n          else {\n            if (typeof validating[a][c[found]] === \"undefined\") {\n              errors.push(\n                `\"${key}\" is a mandatory field! Please add the field with ${grammar[key].typeof} type`\n              );\n\n            }\n            else {\n              errors.push(\n                ` \"${key}\" has an invalid type of '${typeof validating[a][c[found]]\n                }'. Expected type of ${grammar[key].typeof}`\n              );\n            }\n          }\n        }\n      }\n    }\n  }\n\n\n\n  if (errors.length > 0) {\n    console.log(errors);\n    return true;\n  }\n\n  return false;\n};\n\n\nconst ProjectPageContent = ({\n  stepslen,\n  nextStep,\n  prevStep,\n  reset,\n  activeStep,\n  scene,\n  action,\n  asset,\n  projectname,\n  timeline,\n  custom,\n}) => {\n  const toast = useToast();\n  const [files, setfiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [data, setdata] = useState(\"\");\n  const [grammarid, setGrammarid] = useState(\"\");\n  const [validated, setValidated] = useState(false);\n  // const [grammarData, setGrammarData] = useState({});\n  const [grammarbundle, setGrammarbundle] = useState({});\n  const [displayErrors, setDisplayErrors] = useState([]);\n  const [valid_rule_list, setvalid_rule_list] = useState([]);\n\n  const [downloadable, setDownloadable] = useState(false);\n  let [val, setValue] = React.useState(\"\");\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [description, set_description] = useState(\"\");\n  const [perdata, set_perdata] = useState(\"\");\n  const [seed, setSeed] = useState(0);\n  const { projectid } = useParams();\n  const [rulename, setRulename] = useState(\"\");\n  const jwttoken = localStorage.getItem(\"jwtToken\");\n  const [textPointer, setTextPointer] = useState({\"row\": 0, \"column\": 0});\n\n  const [position, setPosition] = useState(0);\n  const [savebutton, setSavebutton] = useState(false);\n  const convertPointer = (pointer, lines) => {\n    let pos = 0;\n    console.log(lines);\n    for(let i=0; i<=pointer.row - 1; i++)\n    {\n      pos += lines[i].length;\n      if(lines[i].length === 0)\n        pos+=1;\n      console.log(\"+\",lines[i].length);\n    }\n    pos += pointer.column;\n    if(pointer.column === 0)\n      pos+=1;\n    console.log(\"+\", pointer.column);\n    console.log(pos);\n    console.log(data);\n    console.log(data.length);\n    setPosition(pos);\n    console.log(position);\n  }\n\n  const getfiles = async () => {\n    let url = backend;\n    // console.log(\"hey\");\n    url = url + `/api/json/timeline`;\n    // if (activeStep === 0) url = `http://localhost:5002/api/json/scene`;\n    // else if (activeStep === 1) url = `http://localhost:5002/api/json/scene`;\n    // else if (activeStep === 2) url = `http://localhost:5002/api/json/scene`;\n    // else if (activeStep === 3) url = `http://localhost:5002/api/json/scene`;\n    // else if (activeStep === 4) url = `http://localhost:5002/api/json/scene`;\n    try {\n      const requestOptions = {\n        headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n      };\n      const res = await Axios.get(url, requestOptions);\n      // console.log(res);\n      ////////////////////////\n      const requestOption = {\n        headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n      };\n      const res2 = await Axios.get(\n        backend + `/api/project/${projectid}/grammarName`,\n        requestOption\n      );\n      console.log(res2.data.grammarName);\n      setfiles(res.data);\n      // console.log(res.data);\n      // console.log(files);\n      res.data.map((p) => {\n        // console.log(p.name);\n\n        if (p.name == res2.data.grammarName) {\n          if (grammarDataArray.length != 5) {\n            grammarDataArray.push(p.scene);\n            grammarDataArray.push(p.asset);\n            grammarDataArray.push(p.action);\n            grammarDataArray.push(p.custom);\n            grammarDataArray.push(p.timeline);\n          }\n          // console.log(grammarDataArray);\n        }\n      })\n\n      // setfiles(res.data);\n    } catch (error) {\n      toast({\n        title: \"Something went wrong 1\",  //Goes wrong\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\",\n      });\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    const f = async () => {\n      setLoading(true);\n      await getfiles();\n      setLoading(false);\n    };\n\n    f();\n  }, []);\n\n  useEffect(() => {\n    getfiles();\n    if (activeStep == 0) {\n      setdata(scene);\n      getfiles();\n      fl = false;\n      if (isJson(scene)) {\n        setDownloadable(true);\n      }\n    }\n    if (activeStep == 1) {\n      setdata(asset);\n      fl = false;\n      if (isJson(asset)) {\n        setDownloadable(true);\n      }\n    }\n    if (activeStep == 2) {\n      setdata(action);\n      fl = false;\n      if (isJson(action)) {\n        setDownloadable(true);\n      }\n    }\n    if (activeStep == 3) {\n      setdata(custom);\n      fl = false\n      if (isJson(custom)) {\n        setDownloadable(true);\n      }\n    }\n    if (activeStep == 4) {\n      setdata(timeline);\n      fl = false;\n      if (isJson(timeline)) {\n        setDownloadable(true);\n      }\n    }\n  }, []);\n  const downloadTxtFile = () => {\n    if (data === \"\" || !isJson(data)) {\n      toast({\n        title: \"JSON Syntax is not correct\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\",\n      });\n      setDownloadable(false);\n      return;\n    }\n    let fileName = \"\";\n    if (activeStep === 0) fileName = \"scene\";\n    if (activeStep === 1) fileName = \"asset\";\n    if (activeStep === 2) fileName = \"action\";\n    if (activeStep === 3) fileName = \"custom\";\n    if (activeStep === 4) fileName = \"timeline\";\n    const json = data;\n    const blob = new Blob([json], { type: \"application/json\" });\n    const href = URL.createObjectURL(blob);\n\n    const downlink = document.createElement(\"a\");\n    downlink.href = href;\n    downlink.download = projectname + \"-\" + fileName + \".json\";\n    document.body.appendChild(downlink);\n    downlink.click();\n\n    // clean up \"a\" element & remove ObjectURL\n    document.body.removeChild(downlink);\n    URL.revokeObjectURL(href);\n  };\n  let handleInputChange = (e) => {\n    let inputValue = e.target.value;\n    setValue(inputValue);\n  };\n\n  let asset_valid = (asset, asset_list, flag) => {\n\n    // if flag is zero, dont print any errors\n    let valid_obj = false;\n\n    asset_list.map(((d,j)=>{\n\n      // console.log(asset, d);\n      if(asset === d)\n        valid_obj = true;\n\n      // if(c.targetObj == d)\n      //   valid_target = true;\n            \n    }))\n\n    if( valid_obj === false )\n    {\n      setValidated(false);\n      setDownloadable(false);\n      if(flag){\n        toast({\n          title:\n            \"Object \"+ asset +\" is not listed in Asset JSON. Only assets present in Asset JSON are valid.\"+asset+\"  \"+asset_list,\n          status: \"warning\",\n          duration: 5000,\n          isClosable: true,\n          position: \"top-right\",\n        });\n      }\n      return -1;\n    }\n    return 1;\n  }\n\n  let assetValidator = (a, all_object_ids) => {\n\n    a.map((c,i)=>{\n\n      // console.log(c);\n\n      let ret1 = asset_valid(c.sourceObj, all_object_ids, 1);\n      let ret2;\n      if(c.targetObj[c.targetObj.length - 1] === '*' )\n      {\n        // console.log(\"yes\");\n        ret2 = 1;\n      }\n      else\n        ret2 = asset_valid(c.targetObj, all_object_ids, 1);\n\n      // console.log(\"rets:\", ret1, ret2);\n\n      if( ret1 === -1 )\n      {\n        // toast({\n        //   title:\n        //     \"Source object should be a part of Asset JSON.\",\n        //   status: \"warning\",\n        //   duration: 5000,\n        //   isClosable: true,\n        //   position: \"top-right\",\n        // });\n        return false;\n      }\n      // console.log(c.repeatactionfor.length);\n      if( c.repeatactionfor !== null && c.repeatactionfor.length !== 0 && c.repeatactionfor[0] !== \" \")\n      {\n        let repeat_assets = [];\n        let curr_word = \"\";\n        Array.from(c.repeatactionfor).map((char, key)=>{\n          if(char === ',' || char === ' ')\n          {\n            if(curr_word !== \"\" && curr_word !== \" \" && curr_word.length !== 0 )\n            {\n              repeat_assets.push(curr_word);\n              curr_word = \"\";\n            }\n          }\n          else\n          {\n            curr_word = curr_word + char;\n          }\n        })\n        if(curr_word != \"\" || curr_word != \" \" || curr_word.length != 0)\n          repeat_assets.push(curr_word);\n        \n        // console.log(repeat_assets);\n\n        repeat_assets.map((word, key)=>{\n          let ret = asset_valid(word, all_object_ids, 1);\n          // console.log(\"ret\", ret);\n          if( ret === -1 )\n          {\n            // toast({\n            //   title:\n            //     \"Objects in repeatactionfor must be a part of Asset JSON.\",\n            //   status: \"warning\",\n            //   duration: 5000,\n            //   isClosable: true,\n            //   position: \"top-right\",\n            // });\n            return false;\n          }\n        })\n\n        if(ret2 === -1 && c.targetObj[c.targetObj.length - 1] !==\"*\")\n        {\n          toast({\n            title:\n              \"Please update the Target Object according to the reccomendations in the document.\",\n            status: \"warning\",\n            duration: 5000,\n            isClosable: true,\n            position: \"top-right\",\n          });\n          return false;\n        }\n        else\n        {\n          if(asset_valid(c.targetObj, repeat_assets, 0) === 1)\n          {\n            toast({\n              title:\n                \"Target object should not be a part of repeatactionfor.\",\n              status: \"warning\",\n              duration: 5000,\n              isClosable: true,\n              position: \"top-right\",\n            });\n            return false;\n          }\n        }\n      }\n    })\n\n    return true;\n  }\n\n  let onValidate2 = async () => {\n\n    toast({\n      title: \"Validation successfull\",\n      status: \"success\",\n      duration: 5000,\n      isClosable: true,\n      position: \"top-right\",\n    });\n\n    console.log(\"output\");\n    setDownloadable(true);\n\n    valid_rule.push({\n      rulename: rulename,\n      data_name: data,\n      description: description\n    });\n\n    setSavebutton(true);\n\n    // fetch('http://localhost:5002/api/upload-custom-rule', {\n    //   headers: {\n    //     'Accept': 'application/json, text/plain, */*',\n    //     'Content-Type': 'application/json'\n    //   },\n    //   method: \"POST\",\n    //   body: JSON.stringify({\n    //     rulename: rulename,\n    //     data_name: data,\n    //     description: description\n    //   })      \n    // }).then((response)=>{\n    //   console.log(response);\n    // })\n\n    console.log(valid_rule);\n  };\n\n  const onValidate = async () => {\n    // console.log(\"onValidate Entered\");\n    if (!isJson(data)) {\n      setValidated(false);\n      setDownloadable(false);\n      toast({\n        title: \"JSON Syntax is not correct\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\",\n      });\n      return;\n    }\n    setDisplayErrors([]);\n    errors = [];\n    var myjson = JSON.parse(data);\n    // console.log(myjson);\n\n    // try {\n    //   if (activeStep == 2) {\n    //     try {\n    //       {\n    //         rules = myjson.objlist;\n    //         var a = myjson.ObjAction;\n    //         //console.log(a[0]);\n    //         //alert(a[0]);\n    //         for (let i = 0; i < a.length; i++) {\n    //           var c = a[i].actresid;\n    //           //  console.log(c);\n    //           flag = true;\n    //           rules.push(c);\n    //         }\n    //       }\n    //     }\n    //     catch (e) {\n    //       console.log(e);\n    //       setValidated(false);\n    //       setDownloadable(false);\n    //     }\n    //   }\n    // }\n    // catch {\n    //   console.log(e);\n    // }\n    // if (grammarDataArray.length === 0) {\n    //   await getfiles();\n    //   //var temp=Object.keys(grammarDataArray);\n    //   // console.log(grammarDataArray);\n    // }\n\n    // console.log(grammarDataArray[0]);\n    try {\n      var mygrm = \"\";\n      if (activeStep == 0) mygrm = JSON.parse(grammarDataArray[0]);\n      else if (activeStep == 1) mygrm = JSON.parse(grammarDataArray[1]);\n      else if (activeStep == 2) mygrm = JSON.parse(grammarDataArray[2]);\n      else if (activeStep == 3) mygrm = JSON.parse(grammarDataArray[3]);\n      else if (activeStep == 4) mygrm = JSON.parse(grammarDataArray[4]);\n\n    } catch (e) {\n      console.log(e);\n    }\n\n    try {\n      // console.log(\"I am trying:\", activeStep);\n      if (activeStep == 2) {\n        try {\n          {\n            // console.log(\"Shambhaviiiiiiiiiiii\");\n\n            let all_object_ids = [];\n            const myobjs = JSON.parse(asset);\n\n            myobjs.articles.map((c,i)=>{\n              all_object_ids.push(c._sid);\n            })\n\n            // console.log(all_object_ids);\n            var a = myjson.ObjAction;\n            \n            for (let i = 0; i < a.length; i++) {\n              var c = a[i].actresid;\n              flag = true;\n              if (c) {\n                rules.push(c);\n              }\n            }\n          }\n        } catch (e) {\n          console.log(e);\n          setValidated(false);\n          setDownloadable(false);\n          toast({\n            title:\n              \"There are errors in the entered JSON, please check them out! Caught error\",\n            status: \"warning\",\n            duration: 5000,\n            isClosable: true,\n            position: \"top-right\",\n          });\n          return;\n        }\n      } else if (activeStep == 1) {\n        try {\n          {\n            var a = myjson.articles;\n            //console.log(a[0]);\n            //alert(a[0]);\n            for (let i = 0; i < a.length; i++) {\n              var c = a[i]._objectname;\n              //  console.log(c);\n              flag = true;\n              if (c) {\n                rules.push(c);\n              }\n            }\n          }\n        } catch (e) {\n          console.log(e);\n          setValidated(false);\n          setDownloadable(false);\n          toast({\n            title:\n              \"There are errors in the entered JSON, please check them out!\",\n            status: \"warning\",\n            duration: 5000,\n            isClosable: true,\n            position: \"top-right\",\n          });\n          return;\n        }\n      } \n    } catch {\n      console.log(e);\n    }\n    if (grammarDataArray.length === 0) {\n      await getfiles();\n    }\n\n\n    try {\n      let mygrm = \"\";\n      if (activeStep == 0) mygrm = JSON.parse(grammarDataArray[0]);\n      else if (activeStep == 1) mygrm = JSON.parse(grammarDataArray[1]);\n      else if (activeStep == 2) mygrm = JSON.parse(grammarDataArray[2]);\n      else if (activeStep == 3) mygrm = JSON.parse(grammarDataArray[3]);\n      else if (activeStep == 4) mygrm = JSON.parse(grammarDataArray[4]);\n\n\n      if (!jsonValidator(mygrm, myjson)) {\n        if(activeStep === 2)\n        {\n          let all_object_ids = [];\n          const myobjs = JSON.parse(asset);\n\n          myobjs.articles.map((c,i)=>{\n            all_object_ids.push(c._sid);\n          })\n          // console.log(all_object_ids);\n\n          const ret_asset = assetValidator(myjson.ObjAction, all_object_ids);\n          // console.log(ret_asset);\n          if(!ret_asset)\n          {\n            console.log(errors);\n            toast({\n              title: \"There are errors in the entered JSON, please check them out!\",\n              status: \"warning\",\n              duration: 5000,\n              isClosable: true,\n              position: \"top-right\",\n            });\n            return;\n          }\n          else{\n            setValidated(true);\n            setDownloadable(true);\n            toast({\n              title: \"JSON Validated Successfully\",\n              status: \"success\",\n              duration: 5000,\n              isClosable: true,\n              position: \"top-right\",\n            });\n          }\n        }\n        else{\n          setValidated(true);\n          setDownloadable(true);\n          toast({\n            title: \"JSON Validated Successfully\",\n            status: \"success\",\n            duration: 5000,\n            isClosable: true,\n            position: \"top-right\",\n          });\n        }\n      } else {\n        console.log(errors);\n        toast({\n          title: \"There are errors in the entered JSON, please check them out!\",\n          status: \"warning\",\n          duration: 5000,\n          isClosable: true,\n          position: \"top-right\",\n        });\n      }\n      // console.log(typeof errors);\n      setDisplayErrors(errors);\n    }\n    catch (e) {\n      console.log(e);\n      toast({\n        title: \"There are errors in the entered JSON, please check them outkljljulij!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\",\n      });\n    }\n  };\n\n  // const onChangeFile = async (e) => {\n  //   setGrammarid(e.target.value);\n  //   if (!e.target.value) {\n  //     setGrammarData({});\n  //     return;\n  //   }\n  //   try {\n  //     const requestOptions = {\n  //       headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n  //     };\n  //     const res = await Axios.get(\n  //       `http://localhost:5002/api/json/${e.target.value}`,\n  //       requestOptions\n  //     );\n  //     const grammarjson = JSON.parse(res.data.data);\n  //     setGrammarData(grammarjson);\n  //   } catch (error) {\n  //     toast({\n  //       title: \"Something went wrong 4\",\n  //       status: \"error\",\n  //       duration: 10000,\n  //       isClosable: true,\n  //       position: \"top\",\n  //     });\n  //     console.log(error);\n  //   }\n  // };\n\n  // const onChangeFile = async (e) => {\n  //   setGrammarid(e.target.value);\n  //   if (!e.target.value) {\n  //     // setGrammarData({});\n  //     return;\n  //   }\n  //   try {\n  //     //   if(activeStep==0) setGrammarData\n  //     //   if(activeStep==0) setGrammarData(grammarbundle.scene)\n  //     //  else if(activeStep==1) setGrammarData(grammarbundle.asset)\n  //     //  else if(activeStep==2) setGrammarData(grammarbundle.action)\n  //     //  else if(activeStep==3) setGrammarData(grammarbundle.custom)\n  //     //  else if(activeStep==4) setGrammarData(grammarbundle.timeline)\n  //   } catch (error) {\n  //     toast({\n  //       title: \"Something went wrong 4\",\n  //       status: \"error\",\n  //       duration: 10000,\n  //       isClosable: true,\n  //       position: \"top\",\n  //     });\n  //     console.log(error);\n  //   }\n  // };\n  const showValidateHandler = async () => {\n    console.log(data);\n    let code = data;\n    let jsonData = JSON.stringify({\n      types: [\n        {\n          type: \"if\",\n          order: [[\"condition\"], [\"scope\"]],\n        },\n\n        {\n          type: \"else\",\n          prev: [\"if\", \"else-if\"],\n          order: [[\"scope\"]],\n        },\n\n        {\n          type: \"else-if\",\n          prev: [\"if\", \"else-if\"],\n          order: [[\"condition\"], [\"scope\"]],\n        },\n\n        {\n          type: \"switch\",\n          order: [[\"condition\"], [\"scope\", [\"Case\"], [\"Default\"]]],\n        },\n\n        {\n          type: \"switch-case\",\n          order: [[\"condition\"], [\"scope\"]],\n        },\n\n        {\n          type: \"switch-case-default\",\n          order: [[\"scope\"]],\n        },\n\n        {\n          type: \"for\",\n          order: [\n            [\"condition\", [\"conditionSeparator\", \"conditionSeparator\"]],\n            [\"scope\"],\n          ],\n        },\n\n        {\n          type: \"while\",\n          order: [[\"condition\"], [\"scope\"]],\n        },\n\n        {\n          type: \"do\",\n          order: [[\"scope\"]],\n          next: [\"do-while\"],\n        },\n\n        {\n          type: \"do-while\",\n          order: [[\"condition\"]],\n          prev: [\"do\"],\n        },\n      ],\n      constructs: [\n        {\n          name: \"if\",\n          type: \"if\",\n          conditionStart: \"(\",\n          conditionEnd: \")\",\n          scopeStart: \"(\",\n          scopeEnd: \")\",\n        },\n\n        {\n          name: \"else-if\",\n          type: \"else-if\",\n          conditionStart: \"(\",\n          conditionEnd: \")\",\n          scopeStart: \"(\",\n          scopeEnd: \")\",\n          pre: [\"if\", \"else-if\"],\n        },\n\n        {\n          name: \"else\",\n          type: \"else\",\n          scopeStart: \"(\",\n          scopeEnd: \")\",\n          pre: [\"if\", \"else-if\"],\n        },\n\n        {\n          name: \"switch\",\n          type: \"switch\",\n          conditionStart: \"(\",\n          conditionEnd: \")\",\n          body: \"Case\",\n          scopeStart: \"(\",\n          scopeEnd: \")\",\n          \"end-body\": \"default\",\n        },\n\n        {\n          name: \"Case\",\n          type: \"switch-case\",\n          conditionStart: \"(\",\n          conditionEnd: \")\",\n          scopeStart: \"(\",\n          scopeEnd: \")\",\n          parent: \"switch\",\n        },\n\n        {\n          name: \"Default\",\n          type: \"switch-case-default\",\n          scopeStart: \"(\",\n          scopeEnd: \")\",\n          parent: \"switch\",\n        },\n\n        {\n          name: \"for\",\n          type: \"for\",\n          conditionStart: \"(\",\n          conditionEnd: \")\",\n          conditionSeparator: \"/\",\n          scopeStart: \"(\",\n          scopeEnd: \")\",\n        },\n\n        {\n          name: \"while\",\n          type: \"while\",\n          conditionStart: \"(\",\n          conditionEnd: \")\",\n          scopeStart: \"(\",\n          scopeEnd: \")\",\n        },\n\n        {\n          name: \"do\",\n          type: \"do\",\n          scopeStart: \"(\",\n          scopeEnd: \")\",\n          next: \"do-while\",\n        },\n\n        {\n          name: \"do-while\",\n          type: \"do-while\",\n          conditionStart: \"(\",\n          conditionEnd: \")\",\n        },\n      ],\n      specialSymbols: [\"#\", \":\", \"!\", \"/\", \"(\", \")\"],\n    });\n\n    // console.log(jsonData);\n    // fetch(`http://localhost:5001/api/upload`, {\n    fetch(validation_server + '/api/upload', {\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      method: \"POST\",\n      body: JSON.stringify({jsonData}),\n    }).then((response) => {\n      console.log(response);\n      response.json().then((val) => {\n        console.log(\"Uploaded\");\n        console.log(val);\n      })\n      .catch((err)=>{\n        console.log(err);\n      });\n      // console.log(`Response: ${response.json()}`)\n    })\n    .catch((err)=>{\n      console.log(err);\n    });\n\n\n    console.log(code);\n    fetch(validation_server + '/api/process', {\n    // fetch(`http://localhost:5001/api/process`, {\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      method: \"POST\",\n      body: JSON.stringify({code}),\n    }).then((response) => {\n      console.log(response);\n      response.json().then((val) => {\n        console.log(\"Validation response from server\");\n        console.log(val.valid);\n        if (val.valid) {\n          onValidate2();\n        } else {\n          setValidated(false);\n          setDownloadable(false);\n          toast({\n            title: \"Error! Please follow conditional syntax.\",\n            status: \"error\",\n            duration: 5000,\n            isClosable: true,\n            position: \"top-right\",\n          });\n\n          return;\n        }\n      })\n      .catch((err)=>{\n        console.log(err);\n      });\n    })\n    .catch((err)=>{\n      console.log(err);\n    });\n  };\n\n  const handleValidateButton = () => {\n    console.log(\"Showing\");\n    showValidateHandler(true);\n  };\n\n  const saveButton = async () => {\n    console.log(\"saving\");\n    try{\n      const res = await Axios.post(\n        backend + \"/api/custom/upload-custom-rule\", {\n          headers: {\n            \"Content-Type\": \"application/json\", \n            token: jwttoken \n          },\n          data: {\n            project_id: projectid,\n            rulename: rulename,\n            data_name: data,\n            description: description\n          }\n        }\n      );\n      toast({\n        title: \"Behaviour Added\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\",\n      });\n      \n      console.log(\"fetching behaviours\");\n      const res_rules = await Axios.post(\n        backend + \"/api/custom/get-custom-rules\", {\n          headers: {\n            \"Content-Type\": \"application/json\", \n            token: jwttoken \n          },\n          data: {\n            project_id: projectid\n          }\n        }\n      );\n      console.log(res_rules.data);\n      setvalid_rule_list(res_rules.data);\n      \n    } catch(err){\n      console.log(err);\n    }\n  }\n\n  const onNextStep = async () => {\n    if (!isJson(data) && activeStep !== 3) {\n      setValidated(false);\n      toast({\n        title: \"JSON Syntax is not correct\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n    setSubmitting(true);\n    let url = backend;\n    if (activeStep === 0)\n      url = url + `/api/project/${projectid}/scene`;\n    else if (activeStep === 1)\n      url = url + `/api/project/${projectid}/asset`;\n    else if (activeStep === 2)\n      url = url + `/api/project/${projectid}/action`;\n    else if (activeStep === 3) {\n      url = url + `/api/project/${projectid}/custom`;\n    }\n    else if (activeStep === 4)\n      url = url + `/api/project/${projectid}/timeline`;\n    try {\n      const requestOptions = {\n        headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n      };\n      const res = await Axios.patch(url, { data }, requestOptions);\n\n      toast({\n        title: res.data.message,\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Something went wrong 3\",\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\",\n      });\n      console.log(error);\n    }\n    setSubmitting(false);\n    // if (activeStep == 2) {\n    //   activeStep = 3;\n    //   return;\n    // }\n\n    nextStep();\n  };\n  const handel_name = (e) => {\n    setRulename(e.target.value);\n  };\n\n  const handel_description = (e) => {\n    set_description(e.target.value);\n  };\n\n  const onFinish = async () => {\n    if (!isJson(data)) {\n      setValidated(false);\n      toast({\n        title: \"JSON Syntax is not correct\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n    setSubmitting(true);\n    let url = backend;\n    if (activeStep === 0)\n      url = url + `/api/project/${projectid}/scene`;\n    else if (activeStep === 1)\n      url = url + `/api/project/${projectid}/asset`;\n    else if (activeStep === 2)\n      url = url + `/api/project/${projectid}/action`;\n    else if (activeStep === 3) {\n      url = url + `/api/project/${projectid}/custom`;\n    }\n    else if (activeStep === 4)\n      url = url + `/api/project/${projectid}/timeline`;\n    try {\n      const requestOptions = {\n        headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n      };\n      const res = await Axios.patch(url, { data }, requestOptions);\n\n      toast({\n        title: res.data.message,\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Something went wrong 2\",\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\",\n      });\n      console.log(error);\n    }\n    setSubmitting(false);\n    onOpen();\n  };\n\n  return loading ? (\n    <>\n      <Flex\n        width={\"80vw\"}\n        height={\"90vh\"}\n        justifyContent=\"center\"\n        alignItems={\"center\"}\n      >\n        <Spinner\n          thickness=\"4px\"\n          speed=\"0.65s\"\n          emptyColor=\"gray.200\"\n          color=\"blue.500\"\n          size=\"xl\"\n        />\n      </Flex>\n    </>\n  ) : (\n    <>\n      {activeStep !== 3 ? (\n        <Grid templateColumns=\"repeat(6, 1fr)\" gap={4}>\n          <GridItem rowSpan={3} colSpan={1}>\n            <Flex flexDir={\"column\"} pr={20} pt={120}>\n              {/* {Object.keys(grammarData).length > 0 ? (\n              <>\n                {Object.keys(grammarData).map((e, i) => (\n                  <Tooltip key={i} label={grammarData[e][\"%comment%\"]}>\n                    <CustomCard\n                      colorScheme={tipcolors[grammarData[e].typeof]}\n                      variant={\n                        grammarData[e].req === \"mandatory\" ? \"solid\" : \"outline\"\n                      }\n                      cursor=\"pointer\"\n                    >\n                      {e}: {grammarData[e].typeof}\n                    </CustomCard>\n                  </Tooltip>\n                ))}\n              </>\n            ) : (\n              <Flex\n                flexDir={\"row\"}\n                alignItems=\"center\"\n                minH=\"60vh\"\n                justifyContent={\"center\"}\n                pl=\"50px\"\n              >\n                Please select a grammar file to validate\n              </Flex>\n            )} */}\n            </Flex>\n          </GridItem>\n          <GridItem rowSpan={3} colSpan={3}>\n            <Flex py={4} alignItems={\"center\"} flexDir=\"column\">\n              {/* <Select\n              placeholder=\"Select Grammar File\"\n              py={4}\n              maxW={80}\n              // onChange={onChangeFile}\n              defaultValue={grammarid}\n            > */}\n              {/* {files.map((file) => (\n                <option key={file._id} value={file._id}>\n                  {file.scene}\n                </option>\n              ))} */}\n              {/* </Select> */}\n              <Flex marginTop={20} marginBottom={10}>\n                <AceEditor\n                  fontSize={16}\n                  showPrintMargin={true}\n                  showGutter={true}\n                  highlightActiveLine={true}\n                  setOptions={{\n                    enableBasicAutocompletion: true,\n                    enableLiveAutocompletion: true,\n                    enableSnippets: false,\n                    showLineNumbers: true,\n                    tabSize: 2,\n                  }}\n                  mode=\"json\"\n                  theme=\"terminal\"\n                  onChange={(newvalue, event) => {\n                    console.log(event);\n                    setdata(newvalue);\n                    console.log(data);\n                    setDownloadable(false);\n                  }}\n                  value={data}\n                  name=\"grammar-editor\"\n                  wrapEnabled\n                  height=\"40em\"\n                  width={\"40em\"}\n                />\n              </Flex>\n              <Stack py={4} direction=\"row\">\n                <Button\n                  colorScheme=\"yellow\"\n                  disabled={!data}\n                  onClick={onValidate}\n                >\n                  Validate_\n                </Button>\n                <Button\n                  colorScheme=\"green\"\n                  disabled={!downloadable}\n                  onClick={downloadTxtFile}\n                  leftIcon={<BiDownload />}\n                >\n                  Download File\n                </Button>\n              </Stack>\n\n              {activeStep === stepslen ? (\n                <Flex px={4} py={4} width=\"100%\" flexDirection=\"column\">\n                  <Heading fontSize=\"xl\" textAlign=\"center\">\n                    Woohoo! All steps completed!\n                  </Heading>\n                  <Button mx=\"auto\" mt={6} size=\"sm\" onClick={reset}>\n                    Reset\n                  </Button>\n                </Flex>\n              ) : (\n                <Flex width=\"100%\" justify=\"flex-end\">\n                  <Button\n                    isDisabled={activeStep === 0}\n                    mr={4}\n                    onClick={prevStep}\n                    size=\"sm\"\n                    variant={\"outline\"}\n                  >\n                    Prev\n                  </Button>\n\n                  {activeStep === stepslen - 1 ? (\n                    <Button\n                      size=\"sm\"\n                      onClick={onFinish}\n                      disabled={!validated}\n                      isLoading={submitting}\n                      colorScheme=\"green\"\n                      variant={\"outline\"}\n                    >\n                      Finish\n                    </Button>\n                  ) : (\n                    <Button\n                      size=\"sm\"\n                      onClick={onNextStep}\n                      disabled={!validated}\n                      isLoading={submitting}\n                      colorScheme=\"yellow\"\n                      variant={\"outline\"}\n                    >\n                      Next\n                    </Button>\n                  )}\n                </Flex>\n              )}\n            </Flex>\n          </GridItem>\n          <GridItem rowSpan={3} colSpan={2} pt={120}>\n            <Flex flexDir={\"column\"} pl={20}>\n              {displayErrors.length > 0 ? (\n                <List spacing={2}>\n                  {displayErrors.map((e, i) => {\n                    let str = \"\";\n                    const splitarr = e.match(/(?:[^\\s\"]+|\"[^\"]*\")+/g);\n                    let Val;\n                    if (splitarr.length === 12) {\n                      splitarr.map(\n                        (m, i) => i !== 0 && i !== 10 && (str = str + \" \" + m)\n                      );\n                      Val = () => (\n                        <>\n                          <Text as=\"span\">\n                            <Text\n                              as=\"span\"\n                              fontWeight={\"bold\"}\n                              color={tipcolors[splitarr[10]]}\n                            >\n                              {splitarr[0]}\n                            </Text>\n                            <Text as=\"span\">{str}</Text>\n                            <Text\n                              as=\"span\"\n                              fontWeight={\"bold\"}\n                              color={tipcolors[splitarr[10]]}\n                            >\n                              {\" \" + splitarr[10]}\n                            </Text>\n                          </Text>\n                        </>\n                      );\n                    }\n\n                    if (splitarr.length === 7 || splitarr.length === 8) {\n                      splitarr.map((m, i) => i !== 0 && (str = str + \" \" + m));\n                      Val = () => (\n                        <>\n                          <Text as=\"span\">\n                            <Text\n                              as=\"span\"\n                              fontWeight={\"bold\"}\n                              color={\"teal.400\"}\n                            >\n                              {splitarr[0]}\n                            </Text>\n                            <Text as=\"span\">{str}</Text>\n                          </Text>\n                        </>\n                      );\n                    }\n\n                    if (splitarr.length === 11) {\n                      splitarr.map(\n                        (m, i) => i !== 0 && i !== 10 && (str = str + \" \" + m)\n                      );\n                      Val = () => (\n                        <>\n                          <Text as=\"span\">\n                            <Text\n                              as=\"span\"\n                              fontWeight={\"bold\"}\n                              color={tipcolors[splitarr[10]]}\n                            >\n                              {splitarr[0]}\n                            </Text>\n                            <Text as=\"span\">{str}</Text>\n                            <Text\n                              as=\"span\"\n                              fontWeight={\"bold\"}\n                              color={tipcolors[splitarr[10]]}\n                            >\n                              {\" \" + splitarr[10]}\n                            </Text>\n                          </Text>\n                        </>\n                      );\n                    }\n\n                    return (\n                      <ListItem key={i}>\n                        <ListIcon as={FaExclamationCircle} color=\"red.500\" />\n                        {<Val />}\n                      </ListItem>\n                    );\n                  })}\n                </List>\n              ) : (\n                <></>\n              )}\n            </Flex>\n          </GridItem>\n          <Modal onClose={onClose} isOpen={isOpen} isCentered>\n            <ModalOverlay />\n            <ModalContent>\n              <ModalCloseButton />\n              <ModalBody>\n                <Box textAlign=\"center\" py={10} px={6}>\n                  <CheckCircleIcon boxSize={\"50px\"} color={\"green.500\"} />\n                  <Heading as=\"h2\" size=\"xl\" mt={6} mb={2}>\n                    JSON Validation Successful!\n                  </Heading>\n                  <Text color={\"gray.500\"}>\n                    We have made sure that your data is free from any data-types\n                    or syntax errors. Happy Development!\n                  </Text>\n                </Box>\n              </ModalBody>\n              <ModalFooter>\n                <Button onClick={() => {\n                  onClose();\n                  // history.push(\"/projects\");\n                }}>Close</Button>\n              </ModalFooter>\n            </ModalContent>\n          </Modal>\n        </Grid>\n      ) : (\n        <>\n          <Tabs isFitted variant=\"enclosed\" marginTop={10}>\n            <TabList mb=\"1em\">\n              <Tab >Write</Tab>\n              <Tab >Read</Tab>\n            </TabList>\n            <TabPanels>\n              <TabPanel>\n                <div>\n                  <Grid templateColumns=\"repeat(8, 1fr)\" gap={2}>\n                    <GridItem rowSpan={8} colStart={1} colEnd={8}>\n                      <Flex py={4} alignItems={\"center\"} flexDir=\"column\">\n                        \n                        <div>\n                          <Flex>\n                            Name:\n                            <FormControl\n                              paddingRight={10}\n                              paddingLeft={2}\n                            // value={rulename} onChange={(e) => { setRulename(e) }} placeholder=\"name\"\n                            >\n                              <input\n                                value={rulename}\n                                onChange={handel_name}\n                                placeholder=\"  Name\"\n                                autoFocus\n                              ></input>\n                            </FormControl>\n                            Description:\n                            <FormControl\n                              paddingLeft={2}\n\n                            // value={description} onChange={(e) => { set_description(e) }} placeholder=\"description\"\n                            >\n                              <input\n                                value={description}\n                                onChange={handel_description}\n                                placeholder=\"  Description\"\n                              ></input>\n                            </FormControl>\n                          </Flex>\n                        </div>\n                        \n                        <Flex flexDir=\"row\" paddingTop={10} paddingLeft={20} marginLeft={20}>\n                          {/* All three boxes inside this */}\n                          \n                          <Flex marginLeft={10} marginRight={10} marginBottom={10}>\n                            <AceEditor\n                              fontSize={16}\n                              showPrintMargin={true}\n                              showGutter={true}\n                              highlightActiveLine={true}\n                              setOptions={{\n                                enableBasicAutocompletion: true,\n                                enableLiveAutocompletion: true,\n                                enableSnippets: false,\n                                showLineNumbers: true,\n                                tabSize: 2,\n                              }}\n                              mode=\"json\"\n                              theme=\"terminal\"\n                              onChange={(newvalue, event) => {\n                                // console.log(newvalue);\n                                fl = false;\n                                // setTextPointer({\"row\": event.end.row, \"column\": event.end.column});\n                                // console.log(event);\n                                setdata(newvalue);\n                                // console.log(data);\n                                // console.log(data.length);\n                                setDownloadable(false);\n                              }}\n                              // onClick={(event) => {   \n                              //   console.log(\"clicked here\");     \n                              //   console.log(event);            \n                              //   // setTextPointer(event.target.selectionStart);\n                              //   setTextPointer({\"row\": event.end.row, \"column\": event.end.column});\n                              //   console.log(textPointer);\n                              //   // convertPointer(textPointer, )\n                              // }}\n                              onCursorChange={(newplace)=>{\n                                // console.log(\"changed text pointer\");\n                                // console.log(newplace);\n                                // setTextPointer({\"row\": newplace.cursor.row, \"column\": newplace.cursor.column});\n                                convertPointer({\"row\":newplace.cursor.row, \"column\": newplace.cursor.column}, newplace.cursor.document.$lines);\n                                // console.log(textPointer);\n                                // console.log(position);\n                              }}\n                              onSelectionChange={(e)=>{\n                                // console.log(e);\n                                // setTextPointer({\"row\": e.cursor.row, \"column\": e.cursor.column});\n                                convertPointer({\"row\": e.cursor.row, \"column\": e.cursor.column}, e.doc.$lines);\n                              }}\n                              value={data}\n                              name=\"grammar-editor\"\n                              wrapEnabled\n                              height={\"40em\"}\n                              width={\"40em\"}\n                              id=\"editor\"\n                            />\n                          </Flex>\n                          <Box\n                            as=\"pane\"\n                            bg=\"grey\"\n                            _dark={{\n                              bg: \"gray.800\",\n                            }}\n                            h=\"40em\"\n                            w=\"24em\"\n                          >\n                            <Box // navbar\n                              as=\"pane\"\n                              zIndex=\"fixed\"\n                              h=\"300px\"\n                              pb=\"10\"\n                              overflowX=\"hidden\"\n                              overflowY=\"auto\"\n                              bg=\"grey\"\n                              w=\"400px\"\n                            >\n                              <Flex px=\"4\" pb=\"3\" pt=\"5\" align=\"center\">\n                                <center>\n                                  <Text\n                                    fontSize=\"2xl\"\n                                    ml=\"2\"\n                                    color=\"white\"\n                                    fontWeight=\"semibold\"\n                                  >\n                                    Actions\n                                  </Text>\n                                </center>\n                              </Flex>\n\n                              <Flex\n                                direction=\"column\"\n                                as=\"nav\"\n                                fontSize=\"lg\"\n                                color=\"white\"\n                                aria-label=\"Main Navigation\"\n                                margin={5}\n                                marginTop={2}\n                                marginLeft={7}\n                              >\n                                {flag ? (\n                                  rules.map((p) => (\n                                    <a\n                                      onClick={() => {\n                                        var newdata_part1 = data.slice(0,position);\n                                        var newdata_part2 = data.slice(position);\n                                        setdata(newdata_part1 + p + newdata_part2);\n                                        // setdata(data + p);\n                                      }}\n                                      color=\"white\"\n                                    >\n                                      {p}\n                                    </a>\n                                  ))\n                                ) : (\n                                  <>\n                                    <Text>No recent files...</Text>\n                                  </>\n                                )}\n                              </Flex>\n                            </Box>\n                            <Box as=\"pane\"\n                            // bg=\"#D69E2E\"\n                            bg=\"black\"\n                            // colorScheme=\"#D69E2E\"\n                            _dark={{\n                              bg: \"gray.800\",\n                            }} \n                            h=\"40em\"\n                            w=\"13em\"\n                            >\n                          \n                          <Box \n                              as=\"pane\"\n                              zIndex=\"fixed\"\n                              h=\"300px\"\n                              overflowX=\"hidden\"\n                              overflowY=\"auto\"\n                              w=\"400px\"\n                              colorScheme=\"yellow\"\n                            >\n                              <Flex px=\"4\" pb=\"3\" pt=\"5\" align=\"center\">\n                                <center>\n                                  <Text\n                                    fontSize=\"2xl\"\n                                    ml=\"2\"\n                                    color=\"white\"\n                                    fontWeight=\"semibold\"\n                                  >\n                                    Semantics\n                                  </Text>\n                                </center>\n                              </Flex>\n                              <Flex\n                                direction=\"column\"\n                                as=\"nav\"\n                                fontSize=\"lg\"\n                                color=\"white\"\n                                aria-label=\"Main Navigation\"\n                                margin={5}\n                                marginTop={2}\n                                marginLeft={7}\n                              >\n                                {\n                                  semantics.elements.map((p) => (\n                                    <a\n                                      onClick={() => {\n                                        console.log(position);\n                                        var newdata_part1 = data.slice(0,position);\n                                        var newdata_part2 = data.slice(position);\n                                        console.log(newdata_part1);\n                                        console.log(newdata_part2);\n                                        setdata(newdata_part1 + p.editorDisplay + newdata_part2);\n\n                                        // if(textPointer.column)\n                                        // const reactAceComponent = this.refs.reactAceComponent;\n                                        // const editor = reactAceComponent.editor;\n                                        // editor.session.insert(textPointer, p.editorDisplay);\n\n                                        // var newdata_part2 = data.slice(textPointer);\n                                        // var x = newdata_part1 + 'x';\n                                        // console.log(x);\n                                        // console.log(newdata_part1 + p.editorDisplay);\n                                        // setdata(newdata_part1 + p.editorDisplay + newdata_part2);\n                                        // setdata(data + p.editorDisplay);\n                                      }}\n                                      color=\"white\"\n                                    >\n                                      <span>{p.displayName}</span>\n                                    </a>\n                                  ))\n                                }\n                              </Flex>\n                            </Box>\n                          </Box>\n                          </Box>\n                        </Flex>\n\n                        <Stack py={4} direction=\"row\">\n                          <Button\n                            colorScheme=\"yellow\"\n                            disabled={!data || !rulename}\n                            onClick={() => {\n                              handleValidateButton();\n                              setSeed(Math.random());\n                            }}\n                          >\n                            Validate\n                          </Button>\n                          <Button\n                            colorScheme=\"green\"\n                            disabled={!data || !rulename || !savebutton}\n                            onClick={() => {\n                              saveButton();\n                            }}\n                          >\n                            Save\n                          </Button>\n                        </Stack>\n\n                        {activeStep === stepslen ? (\n                          <Flex\n                            px={4}\n                            py={4}\n                            width=\"100%\"\n                            flexDirection=\"column\"\n                          >\n                            <Heading fontSize=\"xl\" textAlign=\"center\">\n                              Woohoo! All steps completed!\n                            </Heading>\n                            <Button mx=\"auto\" mt={6} size=\"sm\" onClick={reset}>\n                              Reset\n                            </Button>\n                          </Flex>\n                        ) : (\n                          <Flex width=\"100%\" justify=\"flex-end\">\n                            <Button\n                              isDisabled={activeStep === 0}\n                              mr={4}\n                              onClick={prevStep}\n                              size=\"sm\"\n                              variant={\"outline\"}\n                            >\n                              Prev\n                            </Button>\n                          </Flex>\n                        )}\n                      \n                      </Flex>\n                    </GridItem>\n\n\n\n                      \n                    {/* </GridItem> */}\n                    <GridItem rowSpan={3} colSpan={2} pt={120}>\n                      <Flex flexDir={\"column\"} pl={20}>\n                        {displayErrors.length > 0 ? (\n                          <List spacing={2}>\n                            {displayErrors.map((e, i) => {\n                              let str = \"\";\n                              const splitarr = e.match(/(?:[^\\s\"]+|\"[^\"]*\")+/g);\n                              let Val;\n                              if (splitarr.length === 12) {\n                                splitarr.map(\n                                  (m, i) =>\n                                    i !== 0 && i !== 10 && (str = str + \" \" + m)\n                                );\n                                Val = () => (\n                                  <>\n                                    <Text as=\"span\">\n                                      <Text\n                                        as=\"span\"\n                                        fontWeight={\"bold\"}\n                                        color={tipcolors[splitarr[10]]}\n                                      >\n                                        {splitarr[0]}\n                                      </Text>\n                                      <Text as=\"span\">{str}</Text>\n                                      <Text\n                                        as=\"span\"\n                                        fontWeight={\"bold\"}\n                                        color={tipcolors[splitarr[10]]}\n                                      >\n                                        {\" \" + splitarr[10]}\n                                      </Text>\n                                    </Text>\n                                  </>\n                                );\n                              }\n\n                              if (\n                                splitarr.length === 7 ||\n                                splitarr.length === 8\n                              ) {\n                                splitarr.map(\n                                  (m, i) => i !== 0 && (str = str + \" \" + m)\n                                );\n                                Val = () => (\n                                  <>\n                                    <Text as=\"span\">\n                                      <Text\n                                        as=\"span\"\n                                        fontWeight={\"bold\"}\n                                        color={\"teal.400\"}\n                                      >\n                                        {splitarr[0]}\n                                      </Text>\n                                      <Text as=\"span\">{str}</Text>\n                                    </Text>\n                                  </>\n                                );\n                              }\n\n                              if (splitarr.length === 11) {\n                                splitarr.map(\n                                  (m, i) =>\n                                    i !== 0 && i !== 10 && (str = str + \" \" + m)\n                                );\n                                Val = () => (\n                                  <>\n                                    <Text as=\"span\">\n                                      <Text\n                                        as=\"span\"\n                                        fontWeight={\"bold\"}\n                                        color={tipcolors[splitarr[10]]}\n                                      >\n                                        {splitarr[0]}\n                                      </Text>\n                                      <Text as=\"span\">{str}</Text>\n                                      <Text\n                                        as=\"span\"\n                                        fontWeight={\"bold\"}\n                                        color={tipcolors[splitarr[10]]}\n                                      >\n                                        {\" \" + splitarr[10]}\n                                      </Text>\n                                    </Text>\n                                  </>\n                                );\n                              }\n\n                              return (\n                                <ListItem key={i}>\n                                  <ListIcon\n                                    as={FaExclamationCircle}\n                                    color=\"red.500\"\n                                  />\n                                  {<Val />}\n                                </ListItem>\n                              );\n                            })}\n                          </List>\n                        ) : (\n                          <></>\n                        )}\n                      </Flex>\n                    </GridItem>\n                  </Grid>\n                </div>\n              </TabPanel>\n              <TabPanel> \n                <div>\n                  <Grid templateColumns=\"repeat(6, 1fr)\" gap={4} marginTop={20}>\n                    <GridItem rowSpan={3} colStart={2} colEnd={5}>\n                      <Flex py={4} alignItems={\"center\"} flexDir=\"column\">\n\n                        <Flex>\n                          <Flex marginRight={10} marginBottom={10}>\n                            <AceEditor\n                              fontSize={16}\n                              showPrintMargin={true}\n                              showGutter={true}\n                              highlightActiveLine={true}\n                              setOptions={{\n                                enableBasicAutocompletion: true,\n                                enableLiveAutocompletion: true,\n                                enableSnippets: false,\n                                showLineNumbers: true,\n                                tabSize: 2,\n                              }}\n                              mode=\"json\"\n                              theme=\"terminal\"\n                              value={perdata}\n                              name=\"grammar-editor\"\n                              wrapEnabled\n                              height={\"40em\"}\n                              width={\"40em\"}\n                              readOnly={true}\n                            />\n                          </Flex>\n                          <Box\n                            as=\"pane\"\n                            bg=\"whitesmoke\"\n                            _dark={{\n                              bg: \"gray.800\",\n                            }}\n                          // minH=\"10vh\"\n                          >\n                            <Box // navbar\n                              as=\"pane\"\n                              pos=\"absolute\"\n                              // top=\"250\"\n                              // right=\"20\"\n                              zIndex=\"fixed\"\n                              h=\"300px\"\n                              pb=\"10\"\n                              overflowX=\"hidden\"\n                              overflowY=\"auto\"\n                              bg=\"grey\"\n                              borderColor=\"black\"\n                              borderRightWidth=\"1px\"\n                              w=\"400px\"\n                            >\n                              <Flex px=\"4\" py=\"5\" align=\"center\">\n                                <center>\n                                  <Text\n                                    fontSize=\"2xl\"\n                                    ml=\"2\"\n                                    color=\"white\"\n                                    fontWeight=\"semibold\"\n                                  >\n                                    Behaviours\n                                  </Text>\n                                </center>\n                              </Flex>\n\n                              <Flex\n                                direction=\"column\"\n                                as=\"nav\"\n                                fontSize=\"md\"\n                                color=\"white\"\n                                aria-label=\"Main Navigation\"\n                                margin={5}\n                              >\n                                <>\n                                  {valid_rule_list.length > 0 ? (\n                                    valid_rule_list.map((p) => (\n                                      <a\n                                        // key={p.rulename}\n                                        onClick={() => {\n                                          if (perdata.length > 0) {\n                                            set_perdata(\n                                              perdata +\n                                              `,{\"rulename\":\"${p.rulename\n                                              }\", \"description\":\"${p.description\n                                              }\",\"logic\": \"${btoa(\n                                                p.data_name\n                                              )}\"}\\n`\n                                            );\n                                          } else {\n                                            set_perdata(\n                                              perdata +\n                                              `{\"rulename\":\"${p.rulename\n                                              }\", \"description\":\"${p.description\n                                              }\",\"logic\": \"${btoa(\n                                                p.data_name\n                                              )}\"}\\n`\n                                            );\n                                          }\n                                        }}\n                                        color=\"white\"\n                                      >\n                                        {p.rulename}\n                                      </a>\n\n                                      // console.log(p.rulename)\n                                    ))\n                                  ) : (\n                                    // console.log(\"jjhghguyg\")\n                                    <>\n                                      <Text>No recent files...</Text>\n                                    </>\n\n                                  )}\n\n                                </>\n                              </Flex>\n                            </Box>\n                          </Box>\n                        </Flex>\n\n\n                        <Stack py={4} direction=\"row\">\n                          <Button\n                            // paddingLeft={-2}\n                            colorScheme=\"yellow\"\n                            onClick={() => {\n                              // perdata.slice(0,perdata.length -1)\n\n                              if (!fl) {\n                                console.log(typeof rules[0]);\n                                for (let i = 0; i < rules.length; i++) {\n                                  rules[i] = `\"` + rules[i] + `\"`;\n                                }\n                                fl = true;\n                              }\n                              setdata(\n                                `{\"objects_used\":[${rules}],\"rules\":[${perdata}]}`\n                              );\n                              toast({\n                                title:\n                                  \"JSON is validated, click next to continue\",\n                                status: \"success\",\n                                duration: 5000,\n                                isClosable: true,\n                                position: \"top-right\",\n                              });\n                              // console.log(data);\n                            }}\n                            disabled={!perdata}\n                            isLoading={submitting}\n                          >\n                            Validate\n                          </Button>\n\n                          <Button\n                            onClick={() => {\n                              set_perdata(\"\");\n                              // fl = false;\n                            }}\n                            // disabled={!validated || !grammarid}\n                            isLoading={submitting}\n                            colorScheme=\"red\"\n                          // variant={\"outline\"}\n                          >\n                            Flush\n                          </Button>\n                          <Button\n                            onClick={() => setSeed(Math.random())}\n                            // disabled={!validated || !grammarid}\n                            isLoading={submitting}\n                            colorScheme=\"green\"\n                          // variant={\"outline\"}\n                          >\n                            Update\n                          </Button>\n                          <Button\n                            colorScheme=\"green\"\n                            disabled={!downloadable}\n                            onClick={downloadTxtFile}\n                            leftIcon={<BiDownload />}\n                          >\n                            Download File\n                          </Button>\n                        </Stack>\n                        <Flex width=\"100%\" justify=\"flex-end\">\n                          <Button\n                            size=\"sm\"\n                            onClick={onNextStep}\n                            // disabled={!validated || !grammarid}\n                            isLoading={submitting}\n                            colorScheme=\"yellow\"\n                            variant={\"outline\"}\n                          >\n                            Next\n                          </Button>\n                        </Flex>\n                      </Flex>\n                    </GridItem>\n                  </Grid>\n                </div>\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n        </>\n      )}\n    </>\n  );\n};\n\nconst CustomCard = React.forwardRef(({ children, ...rest }, ref) => (\n  <Box p=\"1\">\n    <Tag ref={ref} {...rest}>\n      {children}\n    </Tag>\n  </Box>\n));\n\nexport default ProjectPageContent;\n"]},"metadata":{},"sourceType":"module"}